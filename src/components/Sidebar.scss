// Sidebar.scss

.Sidebar {
  width: 256px;
  align-self: stretch;
  background: #1C1C1C;
  overflow: hidden;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: inline-flex; // Changed to flex for consistency with children, though inline-flex might be for specific parent context

  .WindowControlsOuter {
    align-self: stretch;
    height: 52px;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    // gap: 10px; // Original gap, can be kept if needed
    display: flex;

    .WindowControlsInner {
      height: 52px;
      padding-left: 24px;
      padding-right: 24px;
      justify-content: flex-start; // Typically window controls are left-aligned
      align-items: center;
      gap: 8px;
      display: flex; // Changed from inline-flex

      // Styles for .Close, .Minimize, .Zoom remain as you provided
      .Close, .Minimize, .Zoom {
        width: 12px;
        height: 12px;
        position: relative;
        border-radius: 100px;
        border: 0.50px rgba(0, 0, 0, 0.20) solid;
      }
      .Close { background: #FF5F57; }
      .Minimize { background: #FEBC2E; }
      .Zoom { background: #28C840; }
    }
  }

  .Menu {
    align-self: stretch;
    flex: 1 1 0;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    display: flex;

    .MenuCategory {
      align-self: stretch;
      // flex: 1 1 0; // This might make categories grow unevenly, remove if items should define height
      padding-left: 24px;
      padding-right: 24px;
      padding-top: 4px;
      padding-bottom: 4px;
      overflow: hidden; // Keep if content might overflow, but might hide desired effects like shadows
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start; // Items will align to the start (left)
      gap: 4px; // Space between label and items, and between items if .MenuItemInstance doesn't have margin
      display: flex;

      .Label { // General label for LIBRARY, MY TAGS
        width: auto; // Allow label to fit content
        max-width: 100%; // Ensure it doesn't overflow category padding
        height: 24px;
        color: #DADADA;
        font-size: 10px;
        font-family: 'Inter', sans-serif;
        font-weight: 400;
        line-height: 20px; // Vertically centers text in 24px height
        word-wrap: break-word;
        text-transform: uppercase; // Common for labels
      }
      
      .LibraryMenuLabel { // Specific wrapper for LIBRARY label, if needed
        .Label {
          // any specific styles for the LIBRARY label itself
        }
      }

      // The .MenuItemInstance class from MenuItem.jsx will now be the children
      // They will be stacked due to flex-direction: column and have a 4px gap from MenuCategory's gap property.
      // If specific styling for the wrapper of MenuItem instances is needed (e.g. full width highlighting background),
      // you might wrap each <MenuItem /> in a div inside Sidebar.jsx, or style .MenuItemInstance further.
    }

    .Divider {
      align-self: stretch;
      height: 2px;
      background: #292929;
      margin: 8px 0; // Add some vertical margin around divider
    }
  }

  .LogoContainer {
    align-self: stretch;
    padding-left: 24px;
    padding-right: 24px;
    padding-top: 16px;
    padding-bottom: 16px;
    overflow: hidden;
    justify-content: space-between;
    align-items: center;
    display: flex; // Changed from inline-flex

    .LogoWrapper {
      justify-content: center;
      align-items: center;
      gap: 10px;
      display: flex;

      .Logo {
        width: 18px;
        height: 17px;
        border-radius: 5px;
        border: 4px #FF5A16 solid;
      }

      .LogoText {
        width: auto;
        height: 20px;
        color: #DADADA;
        font-size: 14px;
        font-family: 'Inter', sans-serif;
        font-weight: 700;
        line-height: 20px;
        word-wrap: break-word;
      }
    }

    .IconSettings {
      width: 18px;
      height: 18px;
      position: relative;
      overflow: hidden;
      cursor: pointer;

      .Vector { // This is the settings icon
        width: 14.28px;
        height: 15px;
        left: 1.86px;
        top: 1.50px;
        position: absolute;
        background: #696969; // Color for settings icon
        // Consider using an SVG or icon font for better scalability
      }
    }
  }
}