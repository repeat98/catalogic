{"version":3,"file":"635.bundle.js","mappings":"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","sources":["webpack://taktwerk/./node_modules/pixi.js/lib/scene/graphics/gl/GlGraphicsAdaptor.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/scene/mesh/gl/GlMeshAdaptor.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/batcher/gl/GlBatchAdaptor.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/const.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBuffer.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBufferSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/context/GlContextSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/const.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/geometry/GlGeometrySystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/GlBackBufferSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/GlColorMaskSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/GlEncoderSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/GlStencilSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/GlRenderTarget.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/state/GlStateSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/state/mapWebGLBlendModesToPixi.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTexture.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadImageResource.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadVideoResource.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/pixiToGlMaps.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/applyStyleParams.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTextureSystem.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlType.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlFormat.mjs","webpack://taktwerk/./node_modules/pixi.js/lib/rendering/renderers/gl/WebGLRenderer.mjs"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { getMaxTexturesPerBatch } from '../../../rendering/batcher/gl/utils/maxRecommendedTextures.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nclass GlGraphicsAdaptor {\n  init() {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = getMaxTexturesPerBatch();\n    const glProgram = compileHighShaderGlProgram({\n      name: \"graphics\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this.shader = new Shader({\n      glProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n  execute(graphicsPipe, renderable) {\n    const context = renderable.context;\n    const shader = context.customShader || this.shader;\n    const renderer = graphicsPipe.renderer;\n    const contextSystem = renderer.graphicsContext;\n    const {\n      batcher,\n      instructions\n    } = contextSystem.getContextRenderData(context);\n    shader.groups[0] = renderer.globalUniforms.bindGroup;\n    renderer.state.set(graphicsPipe.state);\n    renderer.shader.bind(shader);\n    renderer.geometry.bind(batcher.geometry, shader.glProgram);\n    const batches = instructions.instructions;\n    for (let i = 0; i < instructions.instructionSize; i++) {\n      const batch = batches[i];\n      if (batch.size) {\n        for (let j = 0; j < batch.textures.count; j++) {\n          renderer.texture.bind(batch.textures.textures[j], j);\n        }\n        renderer.geometry.draw(batch.topology, batch.size, batch.start);\n      }\n    }\n  }\n  destroy() {\n    this.shader.destroy(true);\n    this.shader = null;\n  }\n}\n/** @ignore */\nGlGraphicsAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"graphics\"\n};\n\nexport { GlGraphicsAdaptor };\n//# sourceMappingURL=GlGraphicsAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { textureBitGl } from '../../../rendering/high-shader/shader-bits/textureBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\n\n\"use strict\";\nclass GlMeshAdaptor {\n  init() {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"mesh\",\n      bits: [\n        localUniformBitGl,\n        textureBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader({\n      glProgram,\n      resources: {\n        uTexture: Texture.EMPTY.source,\n        textureUniforms: {\n          uTextureMatrix: { type: \"mat3x3<f32>\", value: new Matrix() }\n        }\n      }\n    });\n  }\n  execute(meshPipe, mesh) {\n    const renderer = meshPipe.renderer;\n    let shader = mesh._shader;\n    if (!shader) {\n      shader = this._shader;\n      const texture = mesh.texture;\n      const source = texture.source;\n      shader.resources.uTexture = source;\n      shader.resources.uSampler = source.style;\n      shader.resources.textureUniforms.uniforms.uTextureMatrix = texture.textureMatrix.mapCoord;\n    } else if (!shader.glProgram) {\n      warn(\"Mesh shader has no glProgram\", mesh.shader);\n      return;\n    }\n    shader.groups[100] = renderer.globalUniforms.bindGroup;\n    shader.groups[101] = meshPipe.localUniformsBindGroup;\n    renderer.encoder.draw({\n      geometry: mesh._geometry,\n      shader,\n      state: mesh.state\n    });\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\nGlMeshAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"mesh\"\n};\n\nexport { GlMeshAdaptor };\n//# sourceMappingURL=GlMeshAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../renderers/shared/state/State.mjs';\n\n\"use strict\";\nclass GlBatchAdaptor {\n  constructor() {\n    this._tempState = State.for2d();\n    /**\n     * We only want to sync the a batched shaders uniforms once on first use\n     * this is a hash of shader uids to a boolean value.  When the shader is first bound\n     * we set the value to true.  When the shader is bound again we check the value and\n     * if it is true we know that the uniforms have already been synced and we skip it.\n     */\n    this._didUploadHash = {};\n  }\n  init(batcherPipe) {\n    batcherPipe.renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._didUploadHash = {};\n  }\n  start(batchPipe, geometry, shader) {\n    const renderer = batchPipe.renderer;\n    const didUpload = this._didUploadHash[shader.uid];\n    renderer.shader.bind(shader, didUpload);\n    if (!didUpload) {\n      this._didUploadHash[shader.uid] = true;\n    }\n    renderer.shader.updateUniformGroup(renderer.globalUniforms.uniformGroup);\n    renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  execute(batchPipe, batch) {\n    const renderer = batchPipe.renderer;\n    this._tempState.blendMode = batch.blendMode;\n    renderer.state.set(this._tempState);\n    const textures = batch.textures.textures;\n    for (let i = 0; i < batch.textures.count; i++) {\n      renderer.texture.bind(textures[i], i);\n    }\n    renderer.geometry.draw(batch.topology, batch.size, batch.start);\n  }\n}\n/** @ignore */\nGlBatchAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"batch\"\n};\n\nexport { GlBatchAdaptor };\n//# sourceMappingURL=GlBatchAdaptor.mjs.map\n","\"use strict\";\nvar BUFFER_TYPE = /* @__PURE__ */ ((BUFFER_TYPE2) => {\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n  return BUFFER_TYPE2;\n})(BUFFER_TYPE || {});\n\nexport { BUFFER_TYPE };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass GlBuffer {\n  constructor(buffer, type) {\n    this._lastBindBaseLocation = -1;\n    this._lastBindCallId = -1;\n    this.buffer = buffer || null;\n    this.updateID = -1;\n    this.byteLength = -1;\n    this.type = type;\n  }\n}\n\nexport { GlBuffer };\n//# sourceMappingURL=GlBuffer.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { BufferUsage } from '../../shared/buffer/const.mjs';\nimport { BUFFER_TYPE } from './const.mjs';\nimport { GlBuffer } from './GlBuffer.mjs';\n\n\"use strict\";\nclass GlBufferSystem {\n  /**\n   * @param {Renderer} renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    /** Cache keeping track of the base bound buffer bases */\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n    this._minBaseLocation = 0;\n    this._nextBindBaseIndex = this._minBaseLocation;\n    this._bindCallId = 0;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuBuffers\");\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this._renderer = null;\n    this._gl = null;\n    this._gpuBuffers = null;\n    this._boundBufferBases = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this._gl = this._renderer.gl;\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    this._maxBindings = gl.MAX_UNIFORM_BUFFER_BINDINGS ? gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS) : 0;\n  }\n  getGlBuffer(buffer) {\n    return this._gpuBuffers[buffer.uid] || this.createGLBuffer(buffer);\n  }\n  /**\n   * This binds specified buffer. On first run, it will create the webGL buffers for the context too\n   * @param buffer - the buffer to bind to the renderer\n   */\n  bind(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n  }\n  /**\n   * Binds an uniform buffer to at the given index.\n   *\n   * A cache is used so a buffer will not be bound again if already bound.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind it to.\n   */\n  bindBufferBase(glBuffer, index) {\n    const { _gl: gl } = this;\n    if (this._boundBufferBases[index] !== glBuffer) {\n      this._boundBufferBases[index] = glBuffer;\n      glBuffer._lastBindBaseLocation = index;\n      gl.bindBufferBase(gl.UNIFORM_BUFFER, index, glBuffer.buffer);\n    }\n  }\n  nextBindBase(hasTransformFeedback) {\n    this._bindCallId++;\n    this._minBaseLocation = 0;\n    if (hasTransformFeedback) {\n      this._boundBufferBases[0] = null;\n      this._minBaseLocation = 1;\n      if (this._nextBindBaseIndex < 1) {\n        this._nextBindBaseIndex = 1;\n      }\n    }\n  }\n  freeLocationForBufferBase(glBuffer) {\n    let freeIndex = this.getLastBindBaseLocation(glBuffer);\n    if (freeIndex >= this._minBaseLocation) {\n      glBuffer._lastBindCallId = this._bindCallId;\n      return freeIndex;\n    }\n    let loop = 0;\n    let nextIndex = this._nextBindBaseIndex;\n    while (loop < 2) {\n      if (nextIndex >= this._maxBindings) {\n        nextIndex = this._minBaseLocation;\n        loop++;\n      }\n      const curBuf = this._boundBufferBases[nextIndex];\n      if (curBuf && curBuf._lastBindCallId === this._bindCallId) {\n        nextIndex++;\n        continue;\n      }\n      break;\n    }\n    freeIndex = nextIndex;\n    this._nextBindBaseIndex = nextIndex + 1;\n    if (loop >= 2) {\n      return -1;\n    }\n    glBuffer._lastBindCallId = this._bindCallId;\n    this._boundBufferBases[freeIndex] = null;\n    return freeIndex;\n  }\n  getLastBindBaseLocation(glBuffer) {\n    const index = glBuffer._lastBindBaseLocation;\n    if (this._boundBufferBases[index] === glBuffer) {\n      return index;\n    }\n    return -1;\n  }\n  /**\n   * Binds a buffer whilst also binding its range.\n   * This will make the buffer start from the offset supplied rather than 0 when it is read.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind at, defaults to 0\n   * @param offset - the offset to bind at (this is blocks of 256). 0 = 0, 1 = 256, 2 = 512 etc\n   * @param size - the size to bind at (this is blocks of 256).\n   */\n  bindBufferRange(glBuffer, index, offset, size) {\n    const { _gl: gl } = this;\n    offset || (offset = 0);\n    index || (index = 0);\n    this._boundBufferBases[index] = null;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, index || 0, glBuffer.buffer, offset * 256, size || 256);\n  }\n  /**\n   * Will ensure the data in the buffer is uploaded to the GPU.\n   * @param {Buffer} buffer - the buffer to update\n   */\n  updateBuffer(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    if (buffer._updateID === glBuffer.updateID) {\n      return glBuffer;\n    }\n    glBuffer.updateID = buffer._updateID;\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n    const data = buffer.data;\n    const drawType = buffer.descriptor.usage & BufferUsage.STATIC ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n    if (data) {\n      if (glBuffer.byteLength >= data.byteLength) {\n        gl.bufferSubData(glBuffer.type, 0, data, 0, buffer._updateSize / data.BYTES_PER_ELEMENT);\n      } else {\n        glBuffer.byteLength = data.byteLength;\n        gl.bufferData(glBuffer.type, data, drawType);\n      }\n    } else {\n      glBuffer.byteLength = buffer.descriptor.size;\n      gl.bufferData(glBuffer.type, glBuffer.byteLength, drawType);\n    }\n    return glBuffer;\n  }\n  /** dispose all WebGL resources of all managed buffers */\n  destroyAll() {\n    const gl = this._gl;\n    for (const id in this._gpuBuffers) {\n      gl.deleteBuffer(this._gpuBuffers[id].buffer);\n    }\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Disposes buffer\n   * @param {Buffer} buffer - buffer with data\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onBufferDestroy(buffer, contextLost) {\n    const glBuffer = this._gpuBuffers[buffer.uid];\n    const gl = this._gl;\n    if (!contextLost) {\n      gl.deleteBuffer(glBuffer.buffer);\n    }\n    this._gpuBuffers[buffer.uid] = null;\n  }\n  /**\n   * creates and attaches a GLBuffer object tied to the current context.\n   * @param buffer\n   * @protected\n   */\n  createGLBuffer(buffer) {\n    const { _gl: gl } = this;\n    let type = BUFFER_TYPE.ARRAY_BUFFER;\n    if (buffer.descriptor.usage & BufferUsage.INDEX) {\n      type = BUFFER_TYPE.ELEMENT_ARRAY_BUFFER;\n    } else if (buffer.descriptor.usage & BufferUsage.UNIFORM) {\n      type = BUFFER_TYPE.UNIFORM_BUFFER;\n    }\n    const glBuffer = new GlBuffer(gl.createBuffer(), type);\n    this._gpuBuffers[buffer.uid] = glBuffer;\n    buffer.on(\"destroy\", this.onBufferDestroy, this);\n    return glBuffer;\n  }\n  resetState() {\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n  }\n}\n/** @ignore */\nGlBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"buffer\"\n};\n\nexport { GlBufferSystem };\n//# sourceMappingURL=GlBufferSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nconst _GlContextSystem = class _GlContextSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /**\n     * Features supported by current renderer.\n     * @type {object}\n     * @readonly\n     */\n    this.supports = {\n      /** Support for 32-bit indices buffer. */\n      uint32Indices: true,\n      /** Support for UniformBufferObjects */\n      uniformBufferObject: true,\n      /** Support for VertexArrayObjects */\n      vertexArrayObject: true,\n      /** Support for SRGB texture format */\n      srgbTextures: true,\n      /** Support for wrapping modes if a texture is non-power of two */\n      nonPowOf2wrapping: true,\n      /** Support for MSAA (antialiasing of dynamic textures) */\n      msaa: true,\n      /** Support for mipmaps if a texture is non-power of two */\n      nonPowOf2mipmaps: true\n    };\n    this._renderer = renderer;\n    this.extensions = /* @__PURE__ */ Object.create(null);\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n  }\n  /**\n   * `true` if the context is lost\n   * @readonly\n   */\n  get isLost() {\n    return !this.gl || this.gl.isContextLost();\n  }\n  /**\n   * Handles the context change event.\n   * @param {WebGLRenderingContext} gl - New WebGL context.\n   */\n  contextChange(gl) {\n    this.gl = gl;\n    this._renderer.gl = gl;\n  }\n  init(options) {\n    options = { ..._GlContextSystem.defaultOptions, ...options };\n    let multiView = this.multiView = options.multiView;\n    if (options.context && multiView) {\n      warn(\"Renderer created with both a context and multiview enabled. Disabling multiView as both cannot work together.\");\n      multiView = false;\n    }\n    if (multiView) {\n      this.canvas = DOMAdapter.get().createCanvas(this._renderer.canvas.width, this._renderer.canvas.height);\n    } else {\n      this.canvas = this._renderer.view.canvas;\n    }\n    if (options.context) {\n      this.initFromContext(options.context);\n    } else {\n      const alpha = this._renderer.background.alpha < 1;\n      const premultipliedAlpha = options.premultipliedAlpha ?? true;\n      const antialias = options.antialias && !this._renderer.backBuffer.useBackBuffer;\n      this.createContext(options.preferWebGLVersion, {\n        alpha,\n        premultipliedAlpha,\n        antialias,\n        stencil: true,\n        preserveDrawingBuffer: options.preserveDrawingBuffer,\n        powerPreference: options.powerPreference ?? \"default\"\n      });\n    }\n  }\n  ensureCanvasSize(targetCanvas) {\n    if (!this.multiView) {\n      if (targetCanvas !== this.canvas) {\n        warn(\"multiView is disabled, but targetCanvas is not the main canvas\");\n      }\n      return;\n    }\n    const { canvas } = this;\n    if (canvas.width < targetCanvas.width || canvas.height < targetCanvas.height) {\n      canvas.width = Math.max(targetCanvas.width, targetCanvas.width);\n      canvas.height = Math.max(targetCanvas.height, targetCanvas.height);\n    }\n  }\n  /**\n   * Initializes the context.\n   * @protected\n   * @param {WebGLRenderingContext} gl - WebGL context\n   */\n  initFromContext(gl) {\n    this.gl = gl;\n    this.webGLVersion = gl instanceof DOMAdapter.get().getWebGLRenderingContext() ? 1 : 2;\n    this.getExtensions();\n    this.validateContext(gl);\n    this._renderer.runners.contextChange.emit(gl);\n    const element = this._renderer.view.canvas;\n    element.addEventListener(\"webglcontextlost\", this.handleContextLost, false);\n    element.addEventListener(\"webglcontextrestored\", this.handleContextRestored, false);\n  }\n  /**\n   * Initialize from context options\n   * @protected\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n   * @param preferWebGLVersion\n   * @param {object} options - context attributes\n   */\n  createContext(preferWebGLVersion, options) {\n    let gl;\n    const canvas = this.canvas;\n    if (preferWebGLVersion === 2) {\n      gl = canvas.getContext(\"webgl2\", options);\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", options);\n      if (!gl) {\n        throw new Error(\"This browser does not support WebGL. Try using the canvas renderer\");\n      }\n    }\n    this.gl = gl;\n    this.initFromContext(this.gl);\n  }\n  /** Auto-populate the {@link GlContextSystem.extensions extensions}. */\n  getExtensions() {\n    const { gl } = this;\n    const common = {\n      anisotropicFiltering: gl.getExtension(\"EXT_texture_filter_anisotropic\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      s3tc: gl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n      s3tc_sRGB: gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n      // eslint-disable-line camelcase\n      etc: gl.getExtension(\"WEBGL_compressed_texture_etc\"),\n      etc1: gl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n      pvrtc: gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n      atc: gl.getExtension(\"WEBGL_compressed_texture_atc\"),\n      astc: gl.getExtension(\"WEBGL_compressed_texture_astc\"),\n      bptc: gl.getExtension(\"EXT_texture_compression_bptc\"),\n      rgtc: gl.getExtension(\"EXT_texture_compression_rgtc\"),\n      loseContext: gl.getExtension(\"WEBGL_lose_context\")\n    };\n    if (this.webGLVersion === 1) {\n      this.extensions = {\n        ...common,\n        drawBuffers: gl.getExtension(\"WEBGL_draw_buffers\"),\n        depthTexture: gl.getExtension(\"WEBGL_depth_texture\"),\n        vertexArrayObject: gl.getExtension(\"OES_vertex_array_object\") || gl.getExtension(\"MOZ_OES_vertex_array_object\") || gl.getExtension(\"WEBKIT_OES_vertex_array_object\"),\n        uint32ElementIndex: gl.getExtension(\"OES_element_index_uint\"),\n        // Floats and half-floats\n        floatTexture: gl.getExtension(\"OES_texture_float\"),\n        floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n        textureHalfFloat: gl.getExtension(\"OES_texture_half_float\"),\n        textureHalfFloatLinear: gl.getExtension(\"OES_texture_half_float_linear\"),\n        vertexAttribDivisorANGLE: gl.getExtension(\"ANGLE_instanced_arrays\"),\n        srgb: gl.getExtension(\"EXT_sRGB\")\n      };\n    } else {\n      this.extensions = {\n        ...common,\n        colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\")\n      };\n      const provokeExt = gl.getExtension(\"WEBGL_provoking_vertex\");\n      if (provokeExt) {\n        provokeExt.provokingVertexWEBGL(provokeExt.FIRST_VERTEX_CONVENTION_WEBGL);\n      }\n    }\n  }\n  /**\n   * Handles a lost webgl context\n   * @param {WebGLContextEvent} event - The context lost event.\n   */\n  handleContextLost(event) {\n    event.preventDefault();\n    if (this._contextLossForced) {\n      this._contextLossForced = false;\n      setTimeout(() => {\n        if (this.gl.isContextLost()) {\n          this.extensions.loseContext?.restoreContext();\n        }\n      }, 0);\n    }\n  }\n  /** Handles a restored webgl context. */\n  handleContextRestored() {\n    this.getExtensions();\n    this._renderer.runners.contextChange.emit(this.gl);\n  }\n  destroy() {\n    const element = this._renderer.view.canvas;\n    this._renderer = null;\n    element.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    element.removeEventListener(\"webglcontextrestored\", this.handleContextRestored);\n    this.gl.useProgram(null);\n    this.extensions.loseContext?.loseContext();\n  }\n  /**\n   * this function can be called to force a webGL context loss\n   * this will release all resources on the GPU.\n   * Useful if you need to put Pixi to sleep, and save some GPU memory\n   *\n   * As soon as render is called - all resources will be created again.\n   */\n  forceContextLoss() {\n    this.extensions.loseContext?.loseContext();\n    this._contextLossForced = true;\n  }\n  /**\n   * Validate context.\n   * @param {WebGLRenderingContext} gl - Render context.\n   */\n  validateContext(gl) {\n    const attributes = gl.getContextAttributes();\n    if (attributes && !attributes.stencil) {\n      warn(\"Provided WebGL context does not have a stencil buffer, masks may not render correctly\");\n    }\n    const supports = this.supports;\n    const isWebGl2 = this.webGLVersion === 2;\n    const extensions = this.extensions;\n    supports.uint32Indices = isWebGl2 || !!extensions.uint32ElementIndex;\n    supports.uniformBufferObject = isWebGl2;\n    supports.vertexArrayObject = isWebGl2 || !!extensions.vertexArrayObject;\n    supports.srgbTextures = isWebGl2 || !!extensions.srgb;\n    supports.nonPowOf2wrapping = isWebGl2;\n    supports.nonPowOf2mipmaps = isWebGl2;\n    supports.msaa = isWebGl2;\n    if (!supports.uint32Indices) {\n      warn(\"Provided WebGL context does not support 32 index buffer, large scenes may not render correctly\");\n    }\n  }\n};\n/** @ignore */\n_GlContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"context\"\n};\n/** The default options for the system. */\n_GlContextSystem.defaultOptions = {\n  /**\n   * {@link WebGLOptions.context}\n   * @default null\n   */\n  context: null,\n  /**\n   * {@link WebGLOptions.premultipliedAlpha}\n   * @default true\n   */\n  premultipliedAlpha: true,\n  /**\n   * {@link WebGLOptions.preserveDrawingBuffer}\n   * @default false\n   */\n  preserveDrawingBuffer: false,\n  /**\n   * {@link WebGLOptions.powerPreference}\n   * @default default\n   */\n  powerPreference: void 0,\n  /**\n   * {@link WebGLOptions.webGLVersion}\n   * @default 2\n   */\n  preferWebGLVersion: 2,\n  /**\n   * {@link WebGLOptions.multiView}\n   * @default false\n   */\n  multiView: false\n};\nlet GlContextSystem = _GlContextSystem;\n\nexport { GlContextSystem };\n//# sourceMappingURL=GlContextSystem.mjs.map\n","\"use strict\";\nvar GL_FORMATS = /* @__PURE__ */ ((GL_FORMATS2) => {\n  GL_FORMATS2[GL_FORMATS2[\"RGBA\"] = 6408] = \"RGBA\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB\"] = 6407] = \"RGB\";\n  GL_FORMATS2[GL_FORMATS2[\"RG\"] = 33319] = \"RG\";\n  GL_FORMATS2[GL_FORMATS2[\"RED\"] = 6403] = \"RED\";\n  GL_FORMATS2[GL_FORMATS2[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"ALPHA\"] = 6406] = \"ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n  return GL_FORMATS2;\n})(GL_FORMATS || {});\nvar GL_TARGETS = /* @__PURE__ */ ((GL_TARGETS2) => {\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n  return GL_TARGETS2;\n})(GL_TARGETS || {});\nvar GL_WRAP_MODES = /* @__PURE__ */ ((GL_WRAP_MODES2) => {\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"CLAMP\"] = 33071] = \"CLAMP\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"REPEAT\"] = 10497] = \"REPEAT\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n  return GL_WRAP_MODES2;\n})(GL_WRAP_MODES || {});\nvar GL_TYPES = /* @__PURE__ */ ((GL_TYPES2) => {\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n  GL_TYPES2[GL_TYPES2[\"BYTE\"] = 5120] = \"BYTE\";\n  GL_TYPES2[GL_TYPES2[\"SHORT\"] = 5122] = \"SHORT\";\n  GL_TYPES2[GL_TYPES2[\"INT\"] = 5124] = \"INT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT\"] = 5126] = \"FLOAT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n  GL_TYPES2[GL_TYPES2[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n  return GL_TYPES2;\n})(GL_TYPES || {});\n\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { GL_TYPES } from '../../texture/const.mjs';\n\n\"use strict\";\nconst infoMap = {\n  uint8x2: GL_TYPES.UNSIGNED_BYTE,\n  uint8x4: GL_TYPES.UNSIGNED_BYTE,\n  sint8x2: GL_TYPES.BYTE,\n  sint8x4: GL_TYPES.BYTE,\n  unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n  unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n  snorm8x2: GL_TYPES.BYTE,\n  snorm8x4: GL_TYPES.BYTE,\n  uint16x2: GL_TYPES.UNSIGNED_SHORT,\n  uint16x4: GL_TYPES.UNSIGNED_SHORT,\n  sint16x2: GL_TYPES.SHORT,\n  sint16x4: GL_TYPES.SHORT,\n  unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n  unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n  snorm16x2: GL_TYPES.SHORT,\n  snorm16x4: GL_TYPES.SHORT,\n  float16x2: GL_TYPES.HALF_FLOAT,\n  float16x4: GL_TYPES.HALF_FLOAT,\n  float32: GL_TYPES.FLOAT,\n  float32x2: GL_TYPES.FLOAT,\n  float32x3: GL_TYPES.FLOAT,\n  float32x4: GL_TYPES.FLOAT,\n  uint32: GL_TYPES.UNSIGNED_INT,\n  uint32x2: GL_TYPES.UNSIGNED_INT,\n  uint32x3: GL_TYPES.UNSIGNED_INT,\n  uint32x4: GL_TYPES.UNSIGNED_INT,\n  sint32: GL_TYPES.INT,\n  sint32x2: GL_TYPES.INT,\n  sint32x3: GL_TYPES.INT,\n  sint32x4: GL_TYPES.INT\n};\nfunction getGlTypeFromFormat(format) {\n  return infoMap[format] ?? infoMap.float32;\n}\n\nexport { getGlTypeFromFormat };\n//# sourceMappingURL=getGlTypeFromFormat.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { getAttributeInfoFromFormat } from '../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ensureAttributes } from '../shader/program/ensureAttributes.mjs';\nimport { getGlTypeFromFormat } from './utils/getGlTypeFromFormat.mjs';\n\n\"use strict\";\nconst topologyToGlMap = {\n  \"point-list\": 0,\n  \"line-list\": 1,\n  \"line-strip\": 3,\n  \"triangle-list\": 4,\n  \"triangle-strip\": 5\n};\nclass GlGeometrySystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this.hasVao = true;\n    this.hasInstance = true;\n    this._renderer.renderableGC.addManagedHash(this, \"_geometryVaoHash\");\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this.gl = this._renderer.gl;\n    if (!this._renderer.context.supports.vertexArrayObject) {\n      throw new Error(\"[PixiJS] Vertex Array Objects are not supported on this device\");\n    }\n    const nativeVaoExtension = this._renderer.context.extensions.vertexArrayObject;\n    if (nativeVaoExtension) {\n      gl.createVertexArray = () => nativeVaoExtension.createVertexArrayOES();\n      gl.bindVertexArray = (vao) => nativeVaoExtension.bindVertexArrayOES(vao);\n      gl.deleteVertexArray = (vao) => nativeVaoExtension.deleteVertexArrayOES(vao);\n    }\n    const nativeInstancedExtension = this._renderer.context.extensions.vertexAttribDivisorANGLE;\n    if (nativeInstancedExtension) {\n      gl.drawArraysInstanced = (a, b, c, d) => {\n        nativeInstancedExtension.drawArraysInstancedANGLE(a, b, c, d);\n      };\n      gl.drawElementsInstanced = (a, b, c, d, e) => {\n        nativeInstancedExtension.drawElementsInstancedANGLE(a, b, c, d, e);\n      };\n      gl.vertexAttribDivisor = (a, b) => nativeInstancedExtension.vertexAttribDivisorANGLE(a, b);\n    }\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Binds geometry so that is can be drawn. Creating a Vao if required\n   * @param geometry - Instance of geometry to bind.\n   * @param program - Instance of program to use vao for.\n   */\n  bind(geometry, program) {\n    const gl = this.gl;\n    this._activeGeometry = geometry;\n    const vao = this.getVao(geometry, program);\n    if (this._activeVao !== vao) {\n      this._activeVao = vao;\n      gl.bindVertexArray(vao);\n    }\n    this.updateBuffers();\n  }\n  /** Reset and unbind any active VAO and geometry. */\n  resetState() {\n    this.unbind();\n  }\n  /** Update buffers of the currently bound geometry. */\n  updateBuffers() {\n    const geometry = this._activeGeometry;\n    const bufferSystem = this._renderer.buffer;\n    for (let i = 0; i < geometry.buffers.length; i++) {\n      const buffer = geometry.buffers[i];\n      bufferSystem.updateBuffer(buffer);\n    }\n  }\n  /**\n   * Check compatibility between a geometry and a program\n   * @param geometry - Geometry instance.\n   * @param program - Program instance.\n   */\n  checkCompatibility(geometry, program) {\n    const geometryAttributes = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    for (const j in shaderAttributes) {\n      if (!geometryAttributes[j]) {\n        throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n      }\n    }\n  }\n  /**\n   * Takes a geometry and program and generates a unique signature for them.\n   * @param geometry - To get signature from.\n   * @param program - To test geometry against.\n   * @returns - Unique signature of the geometry and program\n   */\n  getSignature(geometry, program) {\n    const attribs = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    const strings = [\"g\", geometry.uid];\n    for (const i in attribs) {\n      if (shaderAttributes[i]) {\n        strings.push(i, shaderAttributes[i].location);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  getVao(geometry, program) {\n    return this._geometryVaoHash[geometry.uid]?.[program._key] || this.initGeometryVao(geometry, program);\n  }\n  /**\n   * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n   * If vao is created, it is bound automatically. We use a shader to infer what and how to set up the\n   * attribute locations.\n   * @param geometry - Instance of geometry to to generate Vao for.\n   * @param program\n   * @param _incRefCount - Increment refCount of all geometry buffers.\n   */\n  initGeometryVao(geometry, program, _incRefCount = true) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    this._renderer.shader._getProgramData(program);\n    this.checkCompatibility(geometry, program);\n    const signature = this.getSignature(geometry, program);\n    if (!this._geometryVaoHash[geometry.uid]) {\n      this._geometryVaoHash[geometry.uid] = /* @__PURE__ */ Object.create(null);\n      geometry.on(\"destroy\", this.onGeometryDestroy, this);\n    }\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    let vao = vaoObjectHash[signature];\n    if (vao) {\n      vaoObjectHash[program._key] = vao;\n      return vao;\n    }\n    ensureAttributes(geometry, program._attributeData);\n    const buffers = geometry.buffers;\n    vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      bufferSystem.bind(buffer);\n    }\n    this.activateVao(geometry, program);\n    vaoObjectHash[program._key] = vao;\n    vaoObjectHash[signature] = vao;\n    gl.bindVertexArray(null);\n    return vao;\n  }\n  /**\n   * Disposes geometry.\n   * @param geometry - Geometry with buffers. Only VAO will be disposed\n   * @param [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onGeometryDestroy(geometry, contextLost) {\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    const gl = this.gl;\n    if (vaoObjectHash) {\n      if (contextLost) {\n        for (const i in vaoObjectHash) {\n          if (this._activeVao !== vaoObjectHash[i]) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[i]);\n        }\n      }\n      this._geometryVaoHash[geometry.uid] = null;\n    }\n  }\n  /**\n   * Dispose all WebGL resources of all managed geometries.\n   * @param [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  destroyAll(contextLost = false) {\n    const gl = this.gl;\n    for (const i in this._geometryVaoHash) {\n      if (contextLost) {\n        for (const j in this._geometryVaoHash[i]) {\n          const vaoObjectHash = this._geometryVaoHash[i];\n          if (this._activeVao !== vaoObjectHash) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[j]);\n        }\n      }\n      this._geometryVaoHash[i] = null;\n    }\n  }\n  /**\n   * Activate vertex array object.\n   * @param geometry - Geometry instance.\n   * @param program - Shader program instance.\n   */\n  activateVao(geometry, program) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    const attributes = geometry.attributes;\n    if (geometry.indexBuffer) {\n      bufferSystem.bind(geometry.indexBuffer);\n    }\n    let lastBuffer = null;\n    for (const j in attributes) {\n      const attribute = attributes[j];\n      const buffer = attribute.buffer;\n      const glBuffer = bufferSystem.getGlBuffer(buffer);\n      const programAttrib = program._attributeData[j];\n      if (programAttrib) {\n        if (lastBuffer !== glBuffer) {\n          bufferSystem.bind(buffer);\n          lastBuffer = glBuffer;\n        }\n        const location = programAttrib.location;\n        gl.enableVertexAttribArray(location);\n        const attributeInfo = getAttributeInfoFromFormat(attribute.format);\n        const type = getGlTypeFromFormat(attribute.format);\n        if (programAttrib.format?.substring(1, 4) === \"int\") {\n          gl.vertexAttribIPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attribute.stride,\n            attribute.offset\n          );\n        } else {\n          gl.vertexAttribPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attributeInfo.normalised,\n            attribute.stride,\n            attribute.offset\n          );\n        }\n        if (attribute.instance) {\n          if (this.hasInstance) {\n            const divisor = attribute.divisor ?? 1;\n            gl.vertexAttribDivisor(location, divisor);\n          } else {\n            throw new Error(\"geometry error, GPU Instancing is not supported on this device\");\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Draws the currently bound geometry.\n   * @param topology - The type primitive to render.\n   * @param size - The number of elements to be rendered. If not specified, all vertices after the\n   *  starting vertex will be drawn.\n   * @param start - The starting vertex in the geometry to start drawing from. If not specified,\n   *  drawing will start from the first vertex.\n   * @param instanceCount - The number of instances of the set of elements to execute. If not specified,\n   *  all instances will be drawn.\n   */\n  draw(topology, size, start, instanceCount) {\n    const { gl } = this._renderer;\n    const geometry = this._activeGeometry;\n    const glTopology = topologyToGlMap[topology || geometry.topology];\n    instanceCount ?? (instanceCount = geometry.instanceCount);\n    if (geometry.indexBuffer) {\n      const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n      const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n      if (instanceCount > 1) {\n        gl.drawElementsInstanced(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount);\n      } else {\n        gl.drawElements(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize);\n      }\n    } else if (instanceCount > 1) {\n      gl.drawArraysInstanced(glTopology, start || 0, size || geometry.getSize(), instanceCount);\n    } else {\n      gl.drawArrays(glTopology, start || 0, size || geometry.getSize());\n    }\n    return this;\n  }\n  /** Unbind/reset everything. */\n  unbind() {\n    this.gl.bindVertexArray(null);\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n  destroy() {\n    this._renderer = null;\n    this.gl = null;\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n}\n/** @ignore */\nGlGeometrySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"geometry\"\n};\n\nexport { GlGeometrySystem };\n//# sourceMappingURL=GlGeometrySystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { Geometry } from '../shared/geometry/Geometry.mjs';\nimport { Shader } from '../shared/shader/Shader.mjs';\nimport { State } from '../shared/state/State.mjs';\nimport { TextureSource } from '../shared/texture/sources/TextureSource.mjs';\nimport { Texture } from '../shared/texture/Texture.mjs';\nimport { GlProgram } from './shader/GlProgram.mjs';\n\n\"use strict\";\nconst bigTriangleGeometry = new Geometry({\n  attributes: {\n    aPosition: [\n      -1,\n      -1,\n      // Bottom left corner\n      3,\n      -1,\n      // Bottom right corner, extending beyond right edge\n      -1,\n      3\n      // Top left corner, extending beyond top edge\n    ]\n  }\n});\nconst _GlBackBufferSystem = class _GlBackBufferSystem {\n  constructor(renderer) {\n    /** if true, the back buffer is used */\n    this.useBackBuffer = false;\n    this._useBackBufferThisRender = false;\n    this._renderer = renderer;\n  }\n  init(options = {}) {\n    const { useBackBuffer, antialias } = { ..._GlBackBufferSystem.defaultOptions, ...options };\n    this.useBackBuffer = useBackBuffer;\n    this._antialias = antialias;\n    if (!this._renderer.context.supports.msaa) {\n      warn(\"antialiasing, is not supported on when using the back buffer\");\n      this._antialias = false;\n    }\n    this._state = State.for2d();\n    const bigTriangleProgram = new GlProgram({\n      vertex: `\n                attribute vec2 aPosition;\n                out vec2 vUv;\n\n                void main() {\n                    gl_Position = vec4(aPosition, 0.0, 1.0);\n\n                    vUv = (aPosition + 1.0) / 2.0;\n\n                    // flip dem UVs\n                    vUv.y = 1.0 - vUv.y;\n                }`,\n      fragment: `\n                in vec2 vUv;\n                out vec4 finalColor;\n\n                uniform sampler2D uTexture;\n\n                void main() {\n                    finalColor = texture(uTexture, vUv);\n                }`,\n      name: \"big-triangle\"\n    });\n    this._bigTriangleShader = new Shader({\n      glProgram: bigTriangleProgram,\n      resources: {\n        uTexture: Texture.WHITE.source\n      }\n    });\n  }\n  /**\n   * This is called before the RenderTargetSystem is started. This is where\n   * we replace the target with the back buffer if required.\n   * @param options - The options for this render.\n   */\n  renderStart(options) {\n    const renderTarget = this._renderer.renderTarget.getRenderTarget(options.target);\n    this._useBackBufferThisRender = this.useBackBuffer && !!renderTarget.isRoot;\n    if (this._useBackBufferThisRender) {\n      const renderTarget2 = this._renderer.renderTarget.getRenderTarget(options.target);\n      this._targetTexture = renderTarget2.colorTexture;\n      options.target = this._getBackBufferTexture(renderTarget2.colorTexture);\n    }\n  }\n  renderEnd() {\n    this._presentBackBuffer();\n  }\n  _presentBackBuffer() {\n    const renderer = this._renderer;\n    renderer.renderTarget.finishRenderPass();\n    if (!this._useBackBufferThisRender)\n      return;\n    renderer.renderTarget.bind(this._targetTexture, false);\n    this._bigTriangleShader.resources.uTexture = this._backBufferTexture.source;\n    renderer.encoder.draw({\n      geometry: bigTriangleGeometry,\n      shader: this._bigTriangleShader,\n      state: this._state\n    });\n  }\n  _getBackBufferTexture(targetSourceTexture) {\n    this._backBufferTexture = this._backBufferTexture || new Texture({\n      source: new TextureSource({\n        width: targetSourceTexture.width,\n        height: targetSourceTexture.height,\n        resolution: targetSourceTexture._resolution,\n        antialias: this._antialias\n      })\n    });\n    this._backBufferTexture.source.resize(\n      targetSourceTexture.width,\n      targetSourceTexture.height,\n      targetSourceTexture._resolution\n    );\n    return this._backBufferTexture;\n  }\n  /** destroys the back buffer */\n  destroy() {\n    if (this._backBufferTexture) {\n      this._backBufferTexture.destroy();\n      this._backBufferTexture = null;\n    }\n  }\n};\n/** @ignore */\n_GlBackBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"backBuffer\",\n  priority: 1\n};\n/** default options for the back buffer system */\n_GlBackBufferSystem.defaultOptions = {\n  /** if true will use the back buffer where required */\n  useBackBuffer: false\n};\nlet GlBackBufferSystem = _GlBackBufferSystem;\n\nexport { GlBackBufferSystem };\n//# sourceMappingURL=GlBackBufferSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlColorMaskSystem {\n  constructor(renderer) {\n    this._colorMaskCache = 15;\n    this._renderer = renderer;\n  }\n  setMask(colorMask) {\n    if (this._colorMaskCache === colorMask)\n      return;\n    this._colorMaskCache = colorMask;\n    this._renderer.gl.colorMask(\n      !!(colorMask & 8),\n      !!(colorMask & 4),\n      !!(colorMask & 2),\n      !!(colorMask & 1)\n    );\n  }\n}\n/** @ignore */\nGlColorMaskSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"colorMask\"\n};\n\nexport { GlColorMaskSystem };\n//# sourceMappingURL=GlColorMaskSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlEncoderSystem {\n  constructor(renderer) {\n    this.commandFinished = Promise.resolve();\n    this._renderer = renderer;\n  }\n  setGeometry(geometry, shader) {\n    this._renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  finishRenderPass() {\n  }\n  draw(options) {\n    const renderer = this._renderer;\n    const { geometry, shader, state, skipSync, topology: type, size, start, instanceCount } = options;\n    renderer.shader.bind(shader, skipSync);\n    renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n    if (state) {\n      renderer.state.set(state);\n    }\n    renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlEncoderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"encoder\"\n};\n\nexport { GlEncoderSystem };\n//# sourceMappingURL=GlEncoderSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuStencilModesToPixi } from '../gpu/state/GpuStencilModesToPixi.mjs';\nimport { STENCIL_MODES } from '../shared/state/const.mjs';\n\n\"use strict\";\nclass GlStencilSystem {\n  constructor(renderer) {\n    this._stencilCache = {\n      enabled: false,\n      stencilReference: 0,\n      stencilMode: STENCIL_MODES.NONE\n    };\n    this._renderTargetStencilState = /* @__PURE__ */ Object.create(null);\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._comparisonFuncMapping = {\n      always: gl.ALWAYS,\n      never: gl.NEVER,\n      equal: gl.EQUAL,\n      \"not-equal\": gl.NOTEQUAL,\n      less: gl.LESS,\n      \"less-equal\": gl.LEQUAL,\n      greater: gl.GREATER,\n      \"greater-equal\": gl.GEQUAL\n    };\n    this._stencilOpsMapping = {\n      keep: gl.KEEP,\n      zero: gl.ZERO,\n      replace: gl.REPLACE,\n      invert: gl.INVERT,\n      \"increment-clamp\": gl.INCR,\n      \"decrement-clamp\": gl.DECR,\n      \"increment-wrap\": gl.INCR_WRAP,\n      \"decrement-wrap\": gl.DECR_WRAP\n    };\n    this.resetState();\n  }\n  onRenderTargetChange(renderTarget) {\n    if (this._activeRenderTarget === renderTarget)\n      return;\n    this._activeRenderTarget = renderTarget;\n    let stencilState = this._renderTargetStencilState[renderTarget.uid];\n    if (!stencilState) {\n      stencilState = this._renderTargetStencilState[renderTarget.uid] = {\n        stencilMode: STENCIL_MODES.DISABLED,\n        stencilReference: 0\n      };\n    }\n    this.setStencilMode(stencilState.stencilMode, stencilState.stencilReference);\n  }\n  resetState() {\n    this._stencilCache.enabled = false;\n    this._stencilCache.stencilMode = STENCIL_MODES.NONE;\n    this._stencilCache.stencilReference = 0;\n  }\n  setStencilMode(stencilMode, stencilReference) {\n    const stencilState = this._renderTargetStencilState[this._activeRenderTarget.uid];\n    const gl = this._gl;\n    const mode = GpuStencilModesToPixi[stencilMode];\n    const _stencilCache = this._stencilCache;\n    stencilState.stencilMode = stencilMode;\n    stencilState.stencilReference = stencilReference;\n    if (stencilMode === STENCIL_MODES.DISABLED) {\n      if (this._stencilCache.enabled) {\n        this._stencilCache.enabled = false;\n        gl.disable(gl.STENCIL_TEST);\n      }\n      return;\n    }\n    if (!this._stencilCache.enabled) {\n      this._stencilCache.enabled = true;\n      gl.enable(gl.STENCIL_TEST);\n    }\n    if (stencilMode !== _stencilCache.stencilMode || _stencilCache.stencilReference !== stencilReference) {\n      _stencilCache.stencilMode = stencilMode;\n      _stencilCache.stencilReference = stencilReference;\n      gl.stencilFunc(this._comparisonFuncMapping[mode.stencilBack.compare], stencilReference, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, this._stencilOpsMapping[mode.stencilBack.passOp]);\n    }\n  }\n}\n/** @ignore */\nGlStencilSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"stencil\"\n};\n\nexport { GlStencilSystem };\n//# sourceMappingURL=GlStencilSystem.mjs.map\n","\"use strict\";\nclass GlRenderTarget {\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n    this.msaa = false;\n    this.msaaRenderBuffer = [];\n  }\n}\n\nexport { GlRenderTarget };\n//# sourceMappingURL=GlRenderTarget.mjs.map\n","import { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { CanvasSource } from '../../shared/texture/sources/CanvasSource.mjs';\nimport { CLEAR } from '../const.mjs';\nimport { GlRenderTarget } from '../GlRenderTarget.mjs';\n\n\"use strict\";\nclass GlRenderTargetAdaptor {\n  constructor() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  init(renderer, renderTargetSystem) {\n    this._renderer = renderer;\n    this._renderTargetSystem = renderTargetSystem;\n    renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  copyToTexture(sourceRenderSurfaceTexture, destinationTexture, originSrc, size, originDest) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const renderer = this._renderer;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(sourceRenderSurfaceTexture);\n    const gl = renderer.gl;\n    this.finishRenderPass(sourceRenderSurfaceTexture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    renderer.texture.bind(destinationTexture, 0);\n    gl.copyTexSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      originDest.x,\n      originDest.y,\n      originSrc.x,\n      originSrc.y,\n      size.width,\n      size.height\n    );\n    return destinationTexture;\n  }\n  startRenderPass(renderTarget, clear = true, clearColor, viewport) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const source = renderTarget.colorTexture;\n    const gpuRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    let viewPortY = viewport.y;\n    if (renderTarget.isRoot) {\n      viewPortY = source.pixelHeight - viewport.height;\n    }\n    renderTarget.colorTextures.forEach((texture) => {\n      this._renderer.texture.unbind(texture);\n    });\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, gpuRenderTarget.framebuffer);\n    const viewPortCache = this._viewPortCache;\n    if (viewPortCache.x !== viewport.x || viewPortCache.y !== viewPortY || viewPortCache.width !== viewport.width || viewPortCache.height !== viewport.height) {\n      viewPortCache.x = viewport.x;\n      viewPortCache.y = viewPortY;\n      viewPortCache.width = viewport.width;\n      viewPortCache.height = viewport.height;\n      gl.viewport(\n        viewport.x,\n        viewPortY,\n        viewport.width,\n        viewport.height\n      );\n    }\n    if (!gpuRenderTarget.depthStencilRenderBuffer && (renderTarget.stencil || renderTarget.depth)) {\n      this._initStencil(gpuRenderTarget);\n    }\n    this.clear(renderTarget, clear, clearColor);\n  }\n  finishRenderPass(renderTarget) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    if (!glRenderTarget.msaa)\n      return;\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, glRenderTarget.framebuffer);\n    gl.blitFramebuffer(\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.framebuffer);\n  }\n  initGpuRenderTarget(renderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const glRenderTarget = new GlRenderTarget();\n    const colorTexture = renderTarget.colorTexture;\n    if (CanvasSource.test(colorTexture.resource)) {\n      this._renderer.context.ensureCanvasSize(renderTarget.colorTexture.resource);\n      glRenderTarget.framebuffer = null;\n      return glRenderTarget;\n    }\n    this._initColor(renderTarget, glRenderTarget);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return glRenderTarget;\n  }\n  destroyGpuRenderTarget(gpuRenderTarget) {\n    const gl = this._renderer.gl;\n    if (gpuRenderTarget.framebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.framebuffer);\n      gpuRenderTarget.framebuffer = null;\n    }\n    if (gpuRenderTarget.resolveTargetFramebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.resolveTargetFramebuffer);\n      gpuRenderTarget.resolveTargetFramebuffer = null;\n    }\n    if (gpuRenderTarget.depthStencilRenderBuffer) {\n      gl.deleteRenderbuffer(gpuRenderTarget.depthStencilRenderBuffer);\n      gpuRenderTarget.depthStencilRenderBuffer = null;\n    }\n    gpuRenderTarget.msaaRenderBuffer.forEach((renderBuffer) => {\n      gl.deleteRenderbuffer(renderBuffer);\n    });\n    gpuRenderTarget.msaaRenderBuffer = null;\n  }\n  clear(_renderTarget, clear, clearColor) {\n    if (!clear)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    if (typeof clear === \"boolean\") {\n      clear = clear ? CLEAR.ALL : CLEAR.NONE;\n    }\n    const gl = this._renderer.gl;\n    if (clear & CLEAR.COLOR) {\n      clearColor ?? (clearColor = renderTargetSystem.defaultClearColor);\n      const clearColorCache = this._clearColorCache;\n      const clearColorArray = clearColor;\n      if (clearColorCache[0] !== clearColorArray[0] || clearColorCache[1] !== clearColorArray[1] || clearColorCache[2] !== clearColorArray[2] || clearColorCache[3] !== clearColorArray[3]) {\n        clearColorCache[0] = clearColorArray[0];\n        clearColorCache[1] = clearColorArray[1];\n        clearColorCache[2] = clearColorArray[2];\n        clearColorCache[3] = clearColorArray[3];\n        gl.clearColor(clearColorArray[0], clearColorArray[1], clearColorArray[2], clearColorArray[3]);\n      }\n    }\n    gl.clear(clear);\n  }\n  resizeGpuRenderTarget(renderTarget) {\n    if (renderTarget.isRoot)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    this._resizeColor(renderTarget, glRenderTarget);\n    if (renderTarget.stencil || renderTarget.depth) {\n      this._resizeStencil(glRenderTarget);\n    }\n  }\n  _initColor(renderTarget, glRenderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const resolveTargetFramebuffer = gl.createFramebuffer();\n    glRenderTarget.resolveTargetFramebuffer = resolveTargetFramebuffer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resolveTargetFramebuffer);\n    glRenderTarget.width = renderTarget.colorTexture.source.pixelWidth;\n    glRenderTarget.height = renderTarget.colorTexture.source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      const source = colorTexture.source;\n      if (source.antialias) {\n        if (renderer.context.supports.msaa) {\n          glRenderTarget.msaa = true;\n        } else {\n          warn(\"[RenderTexture] Antialiasing on textures is not supported in WebGL1\");\n        }\n      }\n      renderer.texture.bindSource(source, 0);\n      const glSource = renderer.texture.getGlSource(source);\n      const glTexture = glSource.texture;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0 + i,\n        3553,\n        // texture.target,\n        glTexture,\n        0\n      );\n    });\n    if (glRenderTarget.msaa) {\n      const viewFramebuffer = gl.createFramebuffer();\n      glRenderTarget.framebuffer = viewFramebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((_, i) => {\n        const msaaRenderBuffer = gl.createRenderbuffer();\n        glRenderTarget.msaaRenderBuffer[i] = msaaRenderBuffer;\n      });\n    } else {\n      glRenderTarget.framebuffer = resolveTargetFramebuffer;\n    }\n    this._resizeColor(renderTarget, glRenderTarget);\n  }\n  _resizeColor(renderTarget, glRenderTarget) {\n    const source = renderTarget.colorTexture.source;\n    glRenderTarget.width = source.pixelWidth;\n    glRenderTarget.height = source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      if (i === 0)\n        return;\n      colorTexture.source.resize(source.width, source.height, source._resolution);\n    });\n    if (glRenderTarget.msaa) {\n      const renderer = this._renderer;\n      const gl = renderer.gl;\n      const viewFramebuffer = glRenderTarget.framebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((colorTexture, i) => {\n        const source2 = colorTexture.source;\n        renderer.texture.bindSource(source2, 0);\n        const glSource = renderer.texture.getGlSource(source2);\n        const glInternalFormat = glSource.internalFormat;\n        const msaaRenderBuffer = glRenderTarget.msaaRenderBuffer[i];\n        gl.bindRenderbuffer(\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n        gl.renderbufferStorageMultisample(\n          gl.RENDERBUFFER,\n          4,\n          glInternalFormat,\n          source2.pixelWidth,\n          source2.pixelHeight\n        );\n        gl.framebufferRenderbuffer(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0 + i,\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n      });\n    }\n  }\n  _initStencil(glRenderTarget) {\n    if (glRenderTarget.framebuffer === null)\n      return;\n    const gl = this._renderer.gl;\n    const depthStencilRenderBuffer = gl.createRenderbuffer();\n    glRenderTarget.depthStencilRenderBuffer = depthStencilRenderBuffer;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_STENCIL_ATTACHMENT,\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    this._resizeStencil(glRenderTarget);\n  }\n  _resizeStencil(glRenderTarget) {\n    const gl = this._renderer.gl;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      glRenderTarget.depthStencilRenderBuffer\n    );\n    if (glRenderTarget.msaa) {\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        4,\n        gl.DEPTH24_STENCIL8,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    } else {\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        this._renderer.context.webGLVersion === 2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    }\n  }\n  prerender(renderTarget) {\n    const resource = renderTarget.colorTexture.resource;\n    if (this._renderer.context.multiView && CanvasSource.test(resource)) {\n      this._renderer.context.ensureCanvasSize(resource);\n    }\n  }\n  postrender(renderTarget) {\n    if (!this._renderer.context.multiView)\n      return;\n    if (CanvasSource.test(renderTarget.colorTexture.resource)) {\n      const contextCanvas = this._renderer.context.canvas;\n      const canvasSource = renderTarget.colorTexture;\n      canvasSource.context2D.drawImage(\n        contextCanvas,\n        0,\n        canvasSource.pixelHeight - contextCanvas.height\n      );\n    }\n  }\n}\n\nexport { GlRenderTargetAdaptor };\n//# sourceMappingURL=GlRenderTargetAdaptor.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { RenderTargetSystem } from '../../shared/renderTarget/RenderTargetSystem.mjs';\nimport { GlRenderTargetAdaptor } from './GlRenderTargetAdaptor.mjs';\n\n\"use strict\";\nclass GlRenderTargetSystem extends RenderTargetSystem {\n  constructor(renderer) {\n    super(renderer);\n    this.adaptor = new GlRenderTargetAdaptor();\n    this.adaptor.init(renderer, this);\n  }\n}\n/** @ignore */\nGlRenderTargetSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"renderTarget\"\n};\n\nexport { GlRenderTargetSystem };\n//# sourceMappingURL=GlRenderTargetSystem.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { State } from '../../shared/state/State.mjs';\nimport { mapWebGLBlendModesToPixi } from './mapWebGLBlendModesToPixi.mjs';\n\n\"use strict\";\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _GlStateSystem = class _GlStateSystem {\n  constructor(renderer) {\n    /**\n     * Whether to invert the front face when rendering\n     * This is used for render textures where the Y-coordinate is flipped\n     * @default false\n     */\n    this._invertFrontFace = false;\n    this.gl = null;\n    this.stateId = 0;\n    this.polygonOffset = 0;\n    this.blendMode = \"none\";\n    this._blendEq = false;\n    this.map = [];\n    this.map[BLEND] = this.setBlend;\n    this.map[OFFSET] = this.setOffset;\n    this.map[CULLING] = this.setCullFace;\n    this.map[DEPTH_TEST] = this.setDepthTest;\n    this.map[WINDING] = this.setFrontFace;\n    this.map[DEPTH_MASK] = this.setDepthMask;\n    this.checks = [];\n    this.defaultState = State.for2d();\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  onRenderTargetChange(renderTarget) {\n    this._invertFrontFace = !renderTarget.isRoot;\n    if (this._cullFace) {\n      this.setFrontFace(this._frontFace);\n    } else {\n      this._frontFaceDirty = true;\n    }\n  }\n  contextChange(gl) {\n    this.gl = gl;\n    this.blendModesMap = mapWebGLBlendModesToPixi(gl);\n    this.resetState();\n  }\n  /**\n   * Sets the current state\n   * @param {*} state - The state to set.\n   */\n  set(state) {\n    state || (state = this.defaultState);\n    if (this.stateId !== state.data) {\n      let diff = this.stateId ^ state.data;\n      let i = 0;\n      while (diff) {\n        if (diff & 1) {\n          this.map[i].call(this, !!(state.data & 1 << i));\n        }\n        diff >>= 1;\n        i++;\n      }\n      this.stateId = state.data;\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n  }\n  /**\n   * Sets the state, when previous state is unknown.\n   * @param {*} state - The state to set\n   */\n  forceState(state) {\n    state || (state = this.defaultState);\n    for (let i = 0; i < this.map.length; i++) {\n      this.map[i].call(this, !!(state.data & 1 << i));\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n    this.stateId = state.data;\n  }\n  /**\n   * Sets whether to enable or disable blending.\n   * @param value - Turn on or off WebGl blending.\n   */\n  setBlend(value) {\n    this._updateCheck(_GlStateSystem._checkBlendMode, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.BLEND);\n  }\n  /**\n   * Sets whether to enable or disable polygon offset fill.\n   * @param value - Turn on or off webgl polygon offset testing.\n   */\n  setOffset(value) {\n    this._updateCheck(_GlStateSystem._checkPolygonOffset, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.POLYGON_OFFSET_FILL);\n  }\n  /**\n   * Sets whether to enable or disable depth test.\n   * @param value - Turn on or off webgl depth testing.\n   */\n  setDepthTest(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.DEPTH_TEST);\n  }\n  /**\n   * Sets whether to enable or disable depth mask.\n   * @param value - Turn on or off webgl depth mask.\n   */\n  setDepthMask(value) {\n    this.gl.depthMask(value);\n  }\n  /**\n   * Sets whether to enable or disable cull face.\n   * @param {boolean} value - Turn on or off webgl cull face.\n   */\n  setCullFace(value) {\n    this._cullFace = value;\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.CULL_FACE);\n    if (this._cullFace && this._frontFaceDirty) {\n      this.setFrontFace(this._frontFace);\n    }\n  }\n  /**\n   * Sets the gl front face.\n   * @param {boolean} value - true is clockwise and false is counter-clockwise\n   */\n  setFrontFace(value) {\n    this._frontFace = value;\n    this._frontFaceDirty = false;\n    const faceMode = this._invertFrontFace ? !value : value;\n    if (this._glFrontFace !== faceMode) {\n      this._glFrontFace = faceMode;\n      this.gl.frontFace(this.gl[faceMode ? \"CW\" : \"CCW\"]);\n    }\n  }\n  /**\n   * Sets the blend mode.\n   * @param {number} value - The blend mode to set to.\n   */\n  setBlendMode(value) {\n    if (!this.blendModesMap[value]) {\n      value = \"normal\";\n    }\n    if (value === this.blendMode) {\n      return;\n    }\n    this.blendMode = value;\n    const mode = this.blendModesMap[value];\n    const gl = this.gl;\n    if (mode.length === 2) {\n      gl.blendFunc(mode[0], mode[1]);\n    } else {\n      gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n    }\n    if (mode.length === 6) {\n      this._blendEq = true;\n      gl.blendEquationSeparate(mode[4], mode[5]);\n    } else if (this._blendEq) {\n      this._blendEq = false;\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    }\n  }\n  /**\n   * Sets the polygon offset.\n   * @param {number} value - the polygon offset\n   * @param {number} scale - the polygon offset scale\n   */\n  setPolygonOffset(value, scale) {\n    this.gl.polygonOffset(value, scale);\n  }\n  // used\n  /** Resets all the logic and disables the VAOs. */\n  resetState() {\n    this._glFrontFace = false;\n    this._frontFace = false;\n    this._cullFace = false;\n    this._frontFaceDirty = false;\n    this._invertFrontFace = false;\n    this.gl.frontFace(this.gl.CCW);\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n    this.forceState(this.defaultState);\n    this._blendEq = true;\n    this.blendMode = \"\";\n    this.setBlendMode(\"normal\");\n  }\n  /**\n   * Checks to see which updates should be checked based on which settings have been activated.\n   *\n   * For example, if blend is enabled then we should check the blend modes each time the state is changed\n   * or if polygon fill is activated then we need to check if the polygon offset changes.\n   * The idea is that we only check what we have too.\n   * @param func - the checking function to add or remove\n   * @param value - should the check function be added or removed.\n   */\n  _updateCheck(func, value) {\n    const index = this.checks.indexOf(func);\n    if (value && index === -1) {\n      this.checks.push(func);\n    } else if (!value && index !== -1) {\n      this.checks.splice(index, 1);\n    }\n  }\n  /**\n   * A private little wrapper function that we call to check the blend mode.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkBlendMode(system, state) {\n    system.setBlendMode(state.blendMode);\n  }\n  /**\n   * A private little wrapper function that we call to check the polygon offset.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkPolygonOffset(system, state) {\n    system.setPolygonOffset(1, state.polygonOffset);\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this.gl = null;\n    this.checks.length = 0;\n  }\n};\n/** @ignore */\n_GlStateSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"state\"\n};\nlet GlStateSystem = _GlStateSystem;\n\nexport { GlStateSystem };\n//# sourceMappingURL=GlStateSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapWebGLBlendModesToPixi(gl) {\n  const blendMap = {};\n  blendMap.normal = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.add = [gl.ONE, gl.ONE];\n  blendMap.multiply = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.screen = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.none = [0, 0];\n  blendMap[\"normal-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap[\"add-npm\"] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  blendMap[\"screen-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.erase = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n  const isWebGl2 = !(gl instanceof DOMAdapter.get().getWebGLRenderingContext());\n  if (isWebGl2) {\n    blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MIN, gl.MIN];\n    blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MAX, gl.MAX];\n  } else {\n    const ext = gl.getExtension(\"EXT_blend_minmax\");\n    if (ext) {\n      blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MIN_EXT, ext.MIN_EXT];\n      blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MAX_EXT, ext.MAX_EXT];\n    }\n  }\n  return blendMap;\n}\n\nexport { mapWebGLBlendModesToPixi };\n//# sourceMappingURL=mapWebGLBlendModesToPixi.mjs.map\n","import { GL_TARGETS, GL_TYPES, GL_FORMATS } from './const.mjs';\n\n\"use strict\";\nclass GlTexture {\n  constructor(texture) {\n    this.target = GL_TARGETS.TEXTURE_2D;\n    this.texture = texture;\n    this.width = -1;\n    this.height = -1;\n    this.type = GL_TYPES.UNSIGNED_BYTE;\n    this.internalFormat = GL_FORMATS.RGBA;\n    this.format = GL_FORMATS.RGBA;\n    this.samplerType = 0;\n  }\n}\n\nexport { GlTexture };\n//# sourceMappingURL=GlTexture.mjs.map\n","\"use strict\";\nconst glUploadBufferImageResource = {\n  id: \"buffer\",\n  upload(source, glTexture, gl) {\n    if (glTexture.width === source.width || glTexture.height === source.height) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        source.width,\n        source.height,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        source.width,\n        source.height,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = source.width;\n    glTexture.height = source.height;\n  }\n};\n\nexport { glUploadBufferImageResource };\n//# sourceMappingURL=glUploadBufferImageResource.mjs.map\n","\"use strict\";\nconst compressedFormatMap = {\n  \"bc1-rgba-unorm\": true,\n  \"bc1-rgba-unorm-srgb\": true,\n  \"bc2-rgba-unorm\": true,\n  \"bc2-rgba-unorm-srgb\": true,\n  \"bc3-rgba-unorm\": true,\n  \"bc3-rgba-unorm-srgb\": true,\n  \"bc4-r-unorm\": true,\n  \"bc4-r-snorm\": true,\n  \"bc5-rg-unorm\": true,\n  \"bc5-rg-snorm\": true,\n  \"bc6h-rgb-ufloat\": true,\n  \"bc6h-rgb-float\": true,\n  \"bc7-rgba-unorm\": true,\n  \"bc7-rgba-unorm-srgb\": true,\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"etc2-rgb8unorm\": true,\n  \"etc2-rgb8unorm-srgb\": true,\n  \"etc2-rgb8a1unorm\": true,\n  \"etc2-rgb8a1unorm-srgb\": true,\n  \"etc2-rgba8unorm\": true,\n  \"etc2-rgba8unorm-srgb\": true,\n  \"eac-r11unorm\": true,\n  \"eac-r11snorm\": true,\n  \"eac-rg11unorm\": true,\n  \"eac-rg11snorm\": true,\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"astc-4x4-unorm\": true,\n  \"astc-4x4-unorm-srgb\": true,\n  \"astc-5x4-unorm\": true,\n  \"astc-5x4-unorm-srgb\": true,\n  \"astc-5x5-unorm\": true,\n  \"astc-5x5-unorm-srgb\": true,\n  \"astc-6x5-unorm\": true,\n  \"astc-6x5-unorm-srgb\": true,\n  \"astc-6x6-unorm\": true,\n  \"astc-6x6-unorm-srgb\": true,\n  \"astc-8x5-unorm\": true,\n  \"astc-8x5-unorm-srgb\": true,\n  \"astc-8x6-unorm\": true,\n  \"astc-8x6-unorm-srgb\": true,\n  \"astc-8x8-unorm\": true,\n  \"astc-8x8-unorm-srgb\": true,\n  \"astc-10x5-unorm\": true,\n  \"astc-10x5-unorm-srgb\": true,\n  \"astc-10x6-unorm\": true,\n  \"astc-10x6-unorm-srgb\": true,\n  \"astc-10x8-unorm\": true,\n  \"astc-10x8-unorm-srgb\": true,\n  \"astc-10x10-unorm\": true,\n  \"astc-10x10-unorm-srgb\": true,\n  \"astc-12x10-unorm\": true,\n  \"astc-12x10-unorm-srgb\": true,\n  \"astc-12x12-unorm\": true,\n  \"astc-12x12-unorm-srgb\": true\n};\nconst glUploadCompressedTextureResource = {\n  id: \"compressed\",\n  upload(source, glTexture, gl) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    let mipWidth = source.pixelWidth;\n    let mipHeight = source.pixelHeight;\n    const compressed = !!compressedFormatMap[source.format];\n    for (let i = 0; i < source.resource.length; i++) {\n      const levelBuffer = source.resource[i];\n      if (compressed) {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          levelBuffer\n        );\n      } else {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          levelBuffer\n        );\n      }\n      mipWidth = Math.max(mipWidth >> 1, 1);\n      mipHeight = Math.max(mipHeight >> 1, 1);\n    }\n  }\n};\n\nexport { glUploadCompressedTextureResource };\n//# sourceMappingURL=glUploadCompressedTextureResource.mjs.map\n","\"use strict\";\nconst glUploadImageResource = {\n  id: \"image\",\n  upload(source, glTexture, gl, webGLVersion) {\n    const glWidth = glTexture.width;\n    const glHeight = glTexture.height;\n    const textureWidth = source.pixelWidth;\n    const textureHeight = source.pixelHeight;\n    const resourceWidth = source.resourceWidth;\n    const resourceHeight = source.resourceHeight;\n    if (resourceWidth < textureWidth || resourceHeight < textureHeight) {\n      if (glWidth !== textureWidth || glHeight !== textureHeight) {\n        gl.texImage2D(\n          glTexture.target,\n          0,\n          glTexture.internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          null\n        );\n      }\n      if (webGLVersion === 2) {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          resourceWidth,\n          resourceHeight,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      } else {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      }\n    } else if (glWidth === textureWidth && glHeight === textureHeight) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else if (webGLVersion === 2) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = textureWidth;\n    glTexture.height = textureHeight;\n  }\n};\n\nexport { glUploadImageResource };\n//# sourceMappingURL=glUploadImageResource.mjs.map\n","import { glUploadImageResource } from './glUploadImageResource.mjs';\n\n\"use strict\";\nconst glUploadVideoResource = {\n  id: \"video\",\n  upload(source, glTexture, gl, webGLVersion) {\n    if (!source.isValid) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        1,\n        1,\n        0,\n        glTexture.format,\n        glTexture.type,\n        null\n      );\n      return;\n    }\n    glUploadImageResource.upload(source, glTexture, gl, webGLVersion);\n  }\n};\n\nexport { glUploadVideoResource };\n//# sourceMappingURL=glUploadVideoResource.mjs.map\n","\"use strict\";\nconst scaleModeToGlFilter = {\n  linear: 9729,\n  nearest: 9728\n};\nconst mipmapScaleModeToGlFilter = {\n  linear: {\n    linear: 9987,\n    nearest: 9985\n  },\n  nearest: {\n    linear: 9986,\n    nearest: 9984\n  }\n};\nconst wrapModeToGlAddress = {\n  \"clamp-to-edge\": 33071,\n  repeat: 10497,\n  \"mirror-repeat\": 33648\n};\nconst compareModeToGlCompare = {\n  never: 512,\n  less: 513,\n  equal: 514,\n  \"less-equal\": 515,\n  greater: 516,\n  \"not-equal\": 517,\n  \"greater-equal\": 518,\n  always: 519\n};\n\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress };\n//# sourceMappingURL=pixiToGlMaps.mjs.map\n","import { wrapModeToGlAddress, scaleModeToGlFilter, mipmapScaleModeToGlFilter, compareModeToGlCompare } from './pixiToGlMaps.mjs';\n\n\"use strict\";\nfunction applyStyleParams(style, gl, mipmaps, anisotropicExt, glFunctionName, firstParam, forceClamp, firstCreation) {\n  const castParam = firstParam;\n  if (!firstCreation || style.addressModeU !== \"repeat\" || style.addressModeV !== \"repeat\" || style.addressModeW !== \"repeat\") {\n    const wrapModeS = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeU];\n    const wrapModeT = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeV];\n    const wrapModeR = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeW];\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_S, wrapModeS);\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_T, wrapModeT);\n    if (gl.TEXTURE_WRAP_R)\n      gl[glFunctionName](castParam, gl.TEXTURE_WRAP_R, wrapModeR);\n  }\n  if (!firstCreation || style.magFilter !== \"linear\") {\n    gl[glFunctionName](castParam, gl.TEXTURE_MAG_FILTER, scaleModeToGlFilter[style.magFilter]);\n  }\n  if (mipmaps) {\n    if (!firstCreation || style.mipmapFilter !== \"linear\") {\n      const glFilterMode = mipmapScaleModeToGlFilter[style.minFilter][style.mipmapFilter];\n      gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, glFilterMode);\n    }\n  } else {\n    gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, scaleModeToGlFilter[style.minFilter]);\n  }\n  if (anisotropicExt && style.maxAnisotropy > 1) {\n    const level = Math.min(style.maxAnisotropy, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n    gl[glFunctionName](castParam, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n  }\n  if (style.compare) {\n    gl[glFunctionName](castParam, gl.TEXTURE_COMPARE_FUNC, compareModeToGlCompare[style.compare]);\n  }\n}\n\nexport { applyStyleParams };\n//# sourceMappingURL=applyStyleParams.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Texture } from '../../shared/texture/Texture.mjs';\nimport { GlTexture } from './GlTexture.mjs';\nimport { glUploadBufferImageResource } from './uploaders/glUploadBufferImageResource.mjs';\nimport { glUploadCompressedTextureResource } from './uploaders/glUploadCompressedTextureResource.mjs';\nimport { glUploadImageResource } from './uploaders/glUploadImageResource.mjs';\nimport { glUploadVideoResource } from './uploaders/glUploadVideoResource.mjs';\nimport { applyStyleParams } from './utils/applyStyleParams.mjs';\nimport { mapFormatToGlFormat } from './utils/mapFormatToGlFormat.mjs';\nimport { mapFormatToGlInternalFormat } from './utils/mapFormatToGlInternalFormat.mjs';\nimport { mapFormatToGlType } from './utils/mapFormatToGlType.mjs';\nimport './utils/unpremultiplyAlpha.mjs';\n\n\"use strict\";\nconst BYTES_PER_PIXEL = 4;\nclass GlTextureSystem {\n  constructor(renderer) {\n    this.managedTextures = [];\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundTextures = [];\n    this._activeTextureLocation = -1;\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._uploads = {\n      image: glUploadImageResource,\n      buffer: glUploadBufferImageResource,\n      video: glUploadVideoResource,\n      compressed: glUploadCompressedTextureResource\n    };\n    this._premultiplyAlpha = false;\n    // TODO - separate samplers will be a cool thing to add, but not right now!\n    this._useSeparateSamplers = false;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_glTextures\");\n    this._renderer.renderableGC.addManagedHash(this, \"_glSamplers\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    if (!this._mapFormatToInternalFormat) {\n      this._mapFormatToInternalFormat = mapFormatToGlInternalFormat(gl, this._renderer.context.extensions);\n      this._mapFormatToType = mapFormatToGlType(gl);\n      this._mapFormatToFormat = mapFormatToGlFormat(gl);\n    }\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._premultiplyAlpha = false;\n    for (let i = 0; i < 16; i++) {\n      this.bind(Texture.EMPTY, i);\n    }\n  }\n  initSource(source) {\n    this.bind(source);\n  }\n  bind(texture, location = 0) {\n    const source = texture.source;\n    if (texture) {\n      this.bindSource(source, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(source.style, location);\n      }\n    } else {\n      this.bindSource(null, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(null, location);\n      }\n    }\n  }\n  bindSource(source, location = 0) {\n    const gl = this._gl;\n    source._touched = this._renderer.textureGC.count;\n    if (this._boundTextures[location] !== source) {\n      this._boundTextures[location] = source;\n      this._activateLocation(location);\n      source || (source = Texture.EMPTY.source);\n      const glTexture = this.getGlSource(source);\n      gl.bindTexture(glTexture.target, glTexture.texture);\n    }\n  }\n  _bindSampler(style, location = 0) {\n    const gl = this._gl;\n    if (!style) {\n      this._boundSamplers[location] = null;\n      gl.bindSampler(location, null);\n      return;\n    }\n    const sampler = this._getGlSampler(style);\n    if (this._boundSamplers[location] !== sampler) {\n      this._boundSamplers[location] = sampler;\n      gl.bindSampler(location, sampler);\n    }\n  }\n  unbind(texture) {\n    const source = texture.source;\n    const boundTextures = this._boundTextures;\n    const gl = this._gl;\n    for (let i = 0; i < boundTextures.length; i++) {\n      if (boundTextures[i] === source) {\n        this._activateLocation(i);\n        const glTexture = this.getGlSource(source);\n        gl.bindTexture(glTexture.target, null);\n        boundTextures[i] = null;\n      }\n    }\n  }\n  _activateLocation(location) {\n    if (this._activeTextureLocation !== location) {\n      this._activeTextureLocation = location;\n      this._gl.activeTexture(this._gl.TEXTURE0 + location);\n    }\n  }\n  _initSource(source) {\n    const gl = this._gl;\n    const glTexture = new GlTexture(gl.createTexture());\n    glTexture.type = this._mapFormatToType[source.format];\n    glTexture.internalFormat = this._mapFormatToInternalFormat[source.format];\n    glTexture.format = this._mapFormatToFormat[source.format];\n    if (source.autoGenerateMipmaps && (this._renderer.context.supports.nonPowOf2mipmaps || source.isPowerOfTwo)) {\n      const biggestDimension = Math.max(source.width, source.height);\n      source.mipLevelCount = Math.floor(Math.log2(biggestDimension)) + 1;\n    }\n    this._glTextures[source.uid] = glTexture;\n    if (!this.managedTextures.includes(source)) {\n      source.on(\"update\", this.onSourceUpdate, this);\n      source.on(\"resize\", this.onSourceUpdate, this);\n      source.on(\"styleChange\", this.onStyleChange, this);\n      source.on(\"destroy\", this.onSourceDestroy, this);\n      source.on(\"unload\", this.onSourceUnload, this);\n      source.on(\"updateMipmaps\", this.onUpdateMipmaps, this);\n      this.managedTextures.push(source);\n    }\n    this.onSourceUpdate(source);\n    this.updateStyle(source, false);\n    return glTexture;\n  }\n  onStyleChange(source) {\n    this.updateStyle(source, false);\n  }\n  updateStyle(source, firstCreation) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    applyStyleParams(\n      source.style,\n      gl,\n      source.mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"texParameteri\",\n      gl.TEXTURE_2D,\n      // will force a clamp to edge if the texture is not a power of two\n      !this._renderer.context.supports.nonPowOf2wrapping && !source.isPowerOfTwo,\n      firstCreation\n    );\n  }\n  onSourceUnload(source) {\n    const glTexture = this._glTextures[source.uid];\n    if (!glTexture)\n      return;\n    this.unbind(source);\n    this._glTextures[source.uid] = null;\n    this._gl.deleteTexture(glTexture.texture);\n  }\n  onSourceUpdate(source) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    const premultipliedAlpha = source.alphaMode === \"premultiply-alpha-on-upload\";\n    if (this._premultiplyAlpha !== premultipliedAlpha) {\n      this._premultiplyAlpha = premultipliedAlpha;\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, premultipliedAlpha);\n    }\n    if (this._uploads[source.uploadMethodId]) {\n      this._uploads[source.uploadMethodId].upload(source, glTexture, gl, this._renderer.context.webGLVersion);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, source.pixelWidth, source.pixelHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    if (source.autoGenerateMipmaps && source.mipLevelCount > 1) {\n      this.onUpdateMipmaps(source, false);\n    }\n  }\n  onUpdateMipmaps(source, bind = true) {\n    if (bind)\n      this.bindSource(source, 0);\n    const glTexture = this.getGlSource(source);\n    this._gl.generateMipmap(glTexture.target);\n  }\n  onSourceDestroy(source) {\n    source.off(\"destroy\", this.onSourceDestroy, this);\n    source.off(\"update\", this.onSourceUpdate, this);\n    source.off(\"resize\", this.onSourceUpdate, this);\n    source.off(\"unload\", this.onSourceUnload, this);\n    source.off(\"styleChange\", this.onStyleChange, this);\n    source.off(\"updateMipmaps\", this.onUpdateMipmaps, this);\n    this.managedTextures.splice(this.managedTextures.indexOf(source), 1);\n    this.onSourceUnload(source);\n  }\n  _initSampler(style) {\n    const gl = this._gl;\n    const glSampler = this._gl.createSampler();\n    this._glSamplers[style._resourceId] = glSampler;\n    applyStyleParams(\n      style,\n      gl,\n      this._boundTextures[this._activeTextureLocation].mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"samplerParameteri\",\n      glSampler,\n      false,\n      true\n    );\n    return this._glSamplers[style._resourceId];\n  }\n  _getGlSampler(sampler) {\n    return this._glSamplers[sampler._resourceId] || this._initSampler(sampler);\n  }\n  getGlSource(source) {\n    return this._glTextures[source.uid] || this._initSource(source);\n  }\n  generateCanvas(texture) {\n    const { pixels, width, height } = this.getPixels(texture);\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      const imageData = ctx.createImageData(width, height);\n      imageData.data.set(pixels);\n      ctx.putImageData(imageData, 0, 0);\n    }\n    return canvas;\n  }\n  getPixels(texture) {\n    const resolution = texture.source.resolution;\n    const frame = texture.frame;\n    const width = Math.max(Math.round(frame.width * resolution), 1);\n    const height = Math.max(Math.round(frame.height * resolution), 1);\n    const pixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n    const renderer = this._renderer;\n    const renderTarget = renderer.renderTarget.getRenderTarget(texture);\n    const glRenterTarget = renderer.renderTarget.getGpuRenderTarget(renderTarget);\n    const gl = renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenterTarget.resolveTargetFramebuffer);\n    gl.readPixels(\n      Math.round(frame.x * resolution),\n      Math.round(frame.y * resolution),\n      width,\n      height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n    if (false) {\n      unpremultiplyAlpha(pixels);\n    }\n    return { pixels: new Uint8ClampedArray(pixels.buffer), width, height };\n  }\n  destroy() {\n    this.managedTextures.slice().forEach((source) => this.onSourceDestroy(source));\n    this.managedTextures = null;\n    this._renderer = null;\n  }\n  resetState() {\n    this._activeTextureLocation = -1;\n    this._boundTextures.fill(Texture.EMPTY.source);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    const gl = this._gl;\n    this._premultiplyAlpha = false;\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiplyAlpha);\n  }\n}\n/** @ignore */\nGlTextureSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"texture\"\n};\n\nexport { GlTextureSystem };\n//# sourceMappingURL=GlTextureSystem.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapFormatToGlInternalFormat(gl, extensions) {\n  let srgb = {};\n  let bgra8unorm = gl.RGBA;\n  if (!(gl instanceof DOMAdapter.get().getWebGLRenderingContext())) {\n    srgb = {\n      \"rgba8unorm-srgb\": gl.SRGB8_ALPHA8,\n      \"bgra8unorm-srgb\": gl.SRGB8_ALPHA8\n    };\n    bgra8unorm = gl.RGBA8;\n  } else if (extensions.srgb) {\n    srgb = {\n      \"rgba8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT,\n      \"bgra8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT\n    };\n  }\n  return {\n    // 8-bit formats\n    r8unorm: gl.R8,\n    r8snorm: gl.R8_SNORM,\n    r8uint: gl.R8UI,\n    r8sint: gl.R8I,\n    // 16-bit formats\n    r16uint: gl.R16UI,\n    r16sint: gl.R16I,\n    r16float: gl.R16F,\n    rg8unorm: gl.RG8,\n    rg8snorm: gl.RG8_SNORM,\n    rg8uint: gl.RG8UI,\n    rg8sint: gl.RG8I,\n    // 32-bit formats\n    r32uint: gl.R32UI,\n    r32sint: gl.R32I,\n    r32float: gl.R32F,\n    rg16uint: gl.RG16UI,\n    rg16sint: gl.RG16I,\n    rg16float: gl.RG16F,\n    rgba8unorm: gl.RGBA,\n    ...srgb,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA8_SNORM,\n    rgba8uint: gl.RGBA8UI,\n    rgba8sint: gl.RGBA8I,\n    bgra8unorm,\n    rgb9e5ufloat: gl.RGB9_E5,\n    rgb10a2unorm: gl.RGB10_A2,\n    rg11b10ufloat: gl.R11F_G11F_B10F,\n    // 64-bit formats\n    rg32uint: gl.RG32UI,\n    rg32sint: gl.RG32I,\n    rg32float: gl.RG32F,\n    rgba16uint: gl.RGBA16UI,\n    rgba16sint: gl.RGBA16I,\n    rgba16float: gl.RGBA16F,\n    // 128-bit formats\n    rgba32uint: gl.RGBA32UI,\n    rgba32sint: gl.RGBA32I,\n    rgba32float: gl.RGBA32F,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT16,\n    depth24plus: gl.DEPTH_COMPONENT24,\n    \"depth24plus-stencil8\": gl.DEPTH24_STENCIL8,\n    depth32float: gl.DEPTH_COMPONENT32F,\n    \"depth32float-stencil8\": gl.DEPTH32F_STENCIL8,\n    // Compressed formats\n    ...extensions.s3tc ? {\n      \"bc1-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.s3tc_sRGB ? {\n      \"bc1-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.rgtc ? {\n      \"bc4-r-unorm\": extensions.rgtc.COMPRESSED_RED_RGTC1_EXT,\n      \"bc4-r-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n      \"bc5-rg-unorm\": extensions.rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT,\n      \"bc5-rg-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT\n    } : {},\n    ...extensions.bptc ? {\n      \"bc6h-rgb-float\": extensions.bptc.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,\n      \"bc6h-rgb-ufloat\": extensions.bptc.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,\n      \"bc7-rgba-unorm\": extensions.bptc.COMPRESSED_RGBA_BPTC_UNORM_EXT,\n      \"bc7-rgba-unorm-srgb\": extensions.bptc.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT\n    } : {},\n    ...extensions.etc ? {\n      \"etc2-rgb8unorm\": extensions.etc.COMPRESSED_RGB8_ETC2,\n      \"etc2-rgb8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ETC2,\n      \"etc2-rgb8a1unorm\": extensions.etc.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgb8a1unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgba8unorm\": extensions.etc.COMPRESSED_RGBA8_ETC2_EAC,\n      \"etc2-rgba8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n      \"eac-r11unorm\": extensions.etc.COMPRESSED_R11_EAC,\n      // 'eac-r11snorm'\n      \"eac-rg11unorm\": extensions.etc.COMPRESSED_SIGNED_RG11_EAC\n      // 'eac-rg11snorm'\n    } : {},\n    ...extensions.astc ? {\n      \"astc-4x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_4x4_KHR,\n      \"astc-4x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n      \"astc-5x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x4_KHR,\n      \"astc-5x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,\n      \"astc-5x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x5_KHR,\n      \"astc-5x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n      \"astc-6x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x5_KHR,\n      \"astc-6x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n      \"astc-6x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x6_KHR,\n      \"astc-6x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n      \"astc-8x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x5_KHR,\n      \"astc-8x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n      \"astc-8x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x6_KHR,\n      \"astc-8x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n      \"astc-8x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x8_KHR,\n      \"astc-8x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n      \"astc-10x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x5_KHR,\n      \"astc-10x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n      \"astc-10x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x6_KHR,\n      \"astc-10x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n      \"astc-10x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x8_KHR,\n      \"astc-10x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n      \"astc-10x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x10_KHR,\n      \"astc-10x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n      \"astc-12x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x10_KHR,\n      \"astc-12x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n      \"astc-12x12-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x12_KHR,\n      \"astc-12x12-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\n    } : {}\n  };\n}\n\nexport { mapFormatToGlInternalFormat };\n//# sourceMappingURL=mapFormatToGlInternalFormat.mjs.map\n","\"use strict\";\nfunction mapFormatToGlType(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.UNSIGNED_BYTE,\n    r8snorm: gl.BYTE,\n    r8uint: gl.UNSIGNED_BYTE,\n    r8sint: gl.BYTE,\n    // 16-bit formats\n    r16uint: gl.UNSIGNED_SHORT,\n    r16sint: gl.SHORT,\n    r16float: gl.HALF_FLOAT,\n    rg8unorm: gl.UNSIGNED_BYTE,\n    rg8snorm: gl.BYTE,\n    rg8uint: gl.UNSIGNED_BYTE,\n    rg8sint: gl.BYTE,\n    // 32-bit formats\n    r32uint: gl.UNSIGNED_INT,\n    r32sint: gl.INT,\n    r32float: gl.FLOAT,\n    rg16uint: gl.UNSIGNED_SHORT,\n    rg16sint: gl.SHORT,\n    rg16float: gl.HALF_FLOAT,\n    rgba8unorm: gl.UNSIGNED_BYTE,\n    \"rgba8unorm-srgb\": gl.UNSIGNED_BYTE,\n    // Packed 32-bit formats\n    rgba8snorm: gl.BYTE,\n    rgba8uint: gl.UNSIGNED_BYTE,\n    rgba8sint: gl.BYTE,\n    bgra8unorm: gl.UNSIGNED_BYTE,\n    \"bgra8unorm-srgb\": gl.UNSIGNED_BYTE,\n    rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n    rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n    rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n    // 64-bit formats\n    rg32uint: gl.UNSIGNED_INT,\n    rg32sint: gl.INT,\n    rg32float: gl.FLOAT,\n    rgba16uint: gl.UNSIGNED_SHORT,\n    rgba16sint: gl.SHORT,\n    rgba16float: gl.HALF_FLOAT,\n    // 128-bit formats\n    rgba32uint: gl.UNSIGNED_INT,\n    rgba32sint: gl.INT,\n    rgba32float: gl.FLOAT,\n    // Depth/stencil formats\n    stencil8: gl.UNSIGNED_BYTE,\n    depth16unorm: gl.UNSIGNED_SHORT,\n    depth24plus: gl.UNSIGNED_INT,\n    \"depth24plus-stencil8\": gl.UNSIGNED_INT_24_8,\n    depth32float: gl.FLOAT,\n    \"depth32float-stencil8\": gl.FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n}\n\nexport { mapFormatToGlType };\n//# sourceMappingURL=mapFormatToGlType.mjs.map\n","\"use strict\";\nfunction mapFormatToGlFormat(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.RED,\n    r8snorm: gl.RED,\n    r8uint: gl.RED,\n    r8sint: gl.RED,\n    // 16-bit formats\n    r16uint: gl.RED,\n    r16sint: gl.RED,\n    r16float: gl.RED,\n    rg8unorm: gl.RG,\n    rg8snorm: gl.RG,\n    rg8uint: gl.RG,\n    rg8sint: gl.RG,\n    // 32-bit formats\n    r32uint: gl.RED,\n    r32sint: gl.RED,\n    r32float: gl.RED,\n    rg16uint: gl.RG,\n    rg16sint: gl.RG,\n    rg16float: gl.RG,\n    rgba8unorm: gl.RGBA,\n    \"rgba8unorm-srgb\": gl.RGBA,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA,\n    rgba8uint: gl.RGBA,\n    rgba8sint: gl.RGBA,\n    bgra8unorm: gl.RGBA,\n    \"bgra8unorm-srgb\": gl.RGBA,\n    rgb9e5ufloat: gl.RGB,\n    rgb10a2unorm: gl.RGBA,\n    rg11b10ufloat: gl.RGB,\n    // 64-bit formats\n    rg32uint: gl.RG,\n    rg32sint: gl.RG,\n    rg32float: gl.RG,\n    rgba16uint: gl.RGBA,\n    rgba16sint: gl.RGBA,\n    rgba16float: gl.RGBA,\n    // 128-bit formats\n    rgba32uint: gl.RGBA,\n    rgba32sint: gl.RGBA,\n    rgba32float: gl.RGBA,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT,\n    depth24plus: gl.DEPTH_COMPONENT,\n    \"depth24plus-stencil8\": gl.DEPTH_STENCIL,\n    depth32float: gl.DEPTH_COMPONENT,\n    \"depth32float-stencil8\": gl.DEPTH_STENCIL\n  };\n}\n\nexport { mapFormatToGlFormat };\n//# sourceMappingURL=mapFormatToGlFormat.mjs.map\n","import { extensions, ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlGraphicsAdaptor } from '../../../scene/graphics/gl/GlGraphicsAdaptor.mjs';\nimport { GlMeshAdaptor } from '../../../scene/mesh/gl/GlMeshAdaptor.mjs';\nimport { GlBatchAdaptor } from '../../batcher/gl/GlBatchAdaptor.mjs';\nimport { AbstractRenderer } from '../shared/system/AbstractRenderer.mjs';\nimport { SharedSystems, SharedRenderPipes } from '../shared/system/SharedSystems.mjs';\nimport { RendererType } from '../types.mjs';\nimport { GlBufferSystem } from './buffer/GlBufferSystem.mjs';\nimport { GlContextSystem } from './context/GlContextSystem.mjs';\nimport { GlGeometrySystem } from './geometry/GlGeometrySystem.mjs';\nimport { GlBackBufferSystem } from './GlBackBufferSystem.mjs';\nimport { GlColorMaskSystem } from './GlColorMaskSystem.mjs';\nimport { GlEncoderSystem } from './GlEncoderSystem.mjs';\nimport { GlStencilSystem } from './GlStencilSystem.mjs';\nimport { GlUboSystem } from './GlUboSystem.mjs';\nimport { GlRenderTargetSystem } from './renderTarget/GlRenderTargetSystem.mjs';\nimport { GlShaderSystem } from './shader/GlShaderSystem.mjs';\nimport { GlUniformGroupSystem } from './shader/GlUniformGroupSystem.mjs';\nimport { GlStateSystem } from './state/GlStateSystem.mjs';\nimport { GlTextureSystem } from './texture/GlTextureSystem.mjs';\n\n\"use strict\";\nconst DefaultWebGLSystems = [\n  ...SharedSystems,\n  GlUboSystem,\n  GlBackBufferSystem,\n  GlContextSystem,\n  GlBufferSystem,\n  GlTextureSystem,\n  GlRenderTargetSystem,\n  GlGeometrySystem,\n  GlUniformGroupSystem,\n  GlShaderSystem,\n  GlEncoderSystem,\n  GlStateSystem,\n  GlStencilSystem,\n  GlColorMaskSystem\n];\nconst DefaultWebGLPipes = [...SharedRenderPipes];\nconst DefaultWebGLAdapters = [GlBatchAdaptor, GlMeshAdaptor, GlGraphicsAdaptor];\nconst systems = [];\nconst renderPipes = [];\nconst renderPipeAdaptors = [];\nextensions.handleByNamedList(ExtensionType.WebGLSystem, systems);\nextensions.handleByNamedList(ExtensionType.WebGLPipes, renderPipes);\nextensions.handleByNamedList(ExtensionType.WebGLPipesAdaptor, renderPipeAdaptors);\nextensions.add(...DefaultWebGLSystems, ...DefaultWebGLPipes, ...DefaultWebGLAdapters);\nclass WebGLRenderer extends AbstractRenderer {\n  constructor() {\n    const systemConfig = {\n      name: \"webgl\",\n      type: RendererType.WEBGL,\n      systems,\n      renderPipes,\n      renderPipeAdaptors\n    };\n    super(systemConfig);\n  }\n}\n\nexport { WebGLRenderer };\n//# sourceMappingURL=WebGLRenderer.mjs.map\n"],"names":["GlGraphicsAdaptor","init","uniforms","UniformGroup","uColor","value","Float32Array","type","uTransformMatrix","Matrix","uRound","maxTextures","glProgram","name","bits","colorBit","generateTextureBatchBit","localUniformBit","roundPixelsBit","this","shader","Shader","resources","localUniforms","batchSamplers","getBatchSamplersUniformGroup","execute","graphicsPipe","renderable","context","customShader","renderer","contextSystem","graphicsContext","batcher","instructions","getContextRenderData","groups","globalUniforms","bindGroup","state","set","bind","geometry","batches","i","instructionSize","batch","size","j","textures","count","texture","draw","topology","start","destroy","extension","WebGLPipesAdaptor","GlMeshAdaptor","textureBit","_shader","uTexture","Texture","EMPTY","source","textureUniforms","uTextureMatrix","meshPipe","mesh","warn","uSampler","style","textureMatrix","mapCoord","localUniformsBindGroup","encoder","_geometry","GlBatchAdaptor","constructor","_tempState","State","for2d","_didUploadHash","batcherPipe","runners","contextChange","add","batchPipe","didUpload","uid","updateUniformGroup","uniformGroup","blendMode","BUFFER_TYPE","BUFFER_TYPE2","GlBuffer","buffer","_lastBindBaseLocation","_lastBindCallId","updateID","byteLength","GlBufferSystem","_gpuBuffers","Object","create","_boundBufferBases","_minBaseLocation","_nextBindBaseIndex","_bindCallId","_renderer","renderableGC","addManagedHash","_gl","gl","_maxBindings","MAX_UNIFORM_BUFFER_BINDINGS","getParameter","getGlBuffer","createGLBuffer","glBuffer","bindBuffer","bindBufferBase","index","UNIFORM_BUFFER","nextBindBase","hasTransformFeedback","freeLocationForBufferBase","freeIndex","getLastBindBaseLocation","loop","nextIndex","curBuf","bindBufferRange","offset","updateBuffer","_updateID","data","drawType","descriptor","usage","STATIC","STATIC_DRAW","DYNAMIC_DRAW","bufferSubData","_updateSize","BYTES_PER_ELEMENT","bufferData","destroyAll","id","deleteBuffer","onBufferDestroy","contextLost","ARRAY_BUFFER","INDEX","ELEMENT_ARRAY_BUFFER","UNIFORM","createBuffer","on","resetState","WebGLSystem","_GlContextSystem","supports","uint32Indices","uniformBufferObject","vertexArrayObject","srgbTextures","nonPowOf2wrapping","msaa","nonPowOf2mipmaps","extensions","handleContextLost","handleContextRestored","isLost","isContextLost","options","defaultOptions","multiView","canvas","get","createCanvas","width","height","view","initFromContext","alpha","background","premultipliedAlpha","antialias","backBuffer","useBackBuffer","createContext","preferWebGLVersion","stencil","preserveDrawingBuffer","powerPreference","ensureCanvasSize","targetCanvas","Math","max","webGLVersion","getWebGLRenderingContext","getExtensions","validateContext","emit","element","addEventListener","getContext","Error","common","anisotropicFiltering","getExtension","floatTextureLinear","s3tc","s3tc_sRGB","etc","etc1","pvrtc","atc","astc","bptc","rgtc","loseContext","drawBuffers","depthTexture","uint32ElementIndex","floatTexture","textureHalfFloat","textureHalfFloatLinear","vertexAttribDivisorANGLE","srgb","colorBufferFloat","provokeExt","provokingVertexWEBGL","FIRST_VERTEX_CONVENTION_WEBGL","event","preventDefault","_contextLossForced","setTimeout","restoreContext","removeEventListener","useProgram","forceContextLoss","attributes","getContextAttributes","isWebGl2","GlContextSystem","GL_FORMATS","GL_FORMATS2","GL_TARGETS","GL_TARGETS2","GL_TYPES","GL_TYPES2","infoMap","uint8x2","UNSIGNED_BYTE","uint8x4","sint8x2","BYTE","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","UNSIGNED_SHORT","uint16x4","sint16x2","SHORT","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","HALF_FLOAT","float16x4","float32","FLOAT","float32x2","float32x3","float32x4","uint32","UNSIGNED_INT","uint32x2","uint32x3","uint32x4","sint32","INT","sint32x2","sint32x3","sint32x4","topologyToGlMap","GlGeometrySystem","_geometryVaoHash","_activeGeometry","_activeVao","hasVao","hasInstance","nativeVaoExtension","createVertexArray","createVertexArrayOES","bindVertexArray","vao","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","nativeInstancedExtension","drawArraysInstanced","a","b","c","d","drawArraysInstancedANGLE","drawElementsInstanced","e","drawElementsInstancedANGLE","vertexAttribDivisor","program","getVao","updateBuffers","unbind","bufferSystem","buffers","length","checkCompatibility","geometryAttributes","shaderAttributes","_attributeData","getSignature","attribs","strings","push","location","join","_key","initGeometryVao","_incRefCount","_getProgramData","signature","onGeometryDestroy","vaoObjectHash","ensureAttributes","activateVao","indexBuffer","lastBuffer","attribute","programAttrib","enableVertexAttribArray","attributeInfo","getAttributeInfoFromFormat","format","substring","vertexAttribIPointer","stride","vertexAttribPointer","normalised","instance","divisor","instanceCount","glTopology","byteSize","glType","drawElements","getSize","drawArrays","bigTriangleGeometry","Geometry","aPosition","_GlBackBufferSystem","_useBackBufferThisRender","_antialias","_state","bigTriangleProgram","GlProgram","vertex","fragment","_bigTriangleShader","WHITE","renderStart","renderTarget","getRenderTarget","target","isRoot","renderTarget2","_targetTexture","colorTexture","_getBackBufferTexture","renderEnd","_presentBackBuffer","finishRenderPass","_backBufferTexture","targetSourceTexture","TextureSource","resolution","_resolution","resize","priority","GlBackBufferSystem","GlColorMaskSystem","_colorMaskCache","setMask","colorMask","GlEncoderSystem","commandFinished","Promise","resolve","setGeometry","skipSync","_activeProgram","GlStencilSystem","_stencilCache","enabled","stencilReference","stencilMode","NONE","_renderTargetStencilState","onRenderTargetChange","_comparisonFuncMapping","always","ALWAYS","never","NEVER","equal","EQUAL","NOTEQUAL","less","LESS","LEQUAL","greater","GREATER","GEQUAL","_stencilOpsMapping","keep","KEEP","zero","ZERO","replace","REPLACE","invert","INVERT","INCR","DECR","INCR_WRAP","DECR_WRAP","_activeRenderTarget","stencilState","DISABLED","setStencilMode","mode","GpuStencilModesToPixi","enable","STENCIL_TEST","stencilFunc","stencilBack","compare","stencilOp","passOp","disable","GlRenderTarget","msaaRenderBuffer","GlRenderTargetAdaptor","_clearColorCache","_viewPortCache","Rectangle","renderTargetSystem","_renderTargetSystem","copyToTexture","sourceRenderSurfaceTexture","destinationTexture","originSrc","originDest","glRenderTarget","getGpuRenderTarget","bindFramebuffer","FRAMEBUFFER","resolveTargetFramebuffer","copyTexSubImage2D","TEXTURE_2D","x","y","startRenderPass","clear","clearColor","viewport","gpuRenderTarget","viewPortY","pixelHeight","colorTextures","forEach","framebuffer","viewPortCache","depthStencilRenderBuffer","depth","_initStencil","READ_FRAMEBUFFER","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","initGpuRenderTarget","CanvasSource","test","resource","_initColor","destroyGpuRenderTarget","deleteFramebuffer","deleteRenderbuffer","renderBuffer","_renderTarget","ALL","COLOR","defaultClearColor","clearColorCache","clearColorArray","resizeGpuRenderTarget","_resizeColor","_resizeStencil","createFramebuffer","pixelWidth","bindSource","glTexture","getGlSource","framebufferTexture2D","COLOR_ATTACHMENT0","viewFramebuffer","_","createRenderbuffer","source2","glInternalFormat","internalFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH24_STENCIL8","renderbufferStorage","DEPTH_STENCIL","prerender","postrender","contextCanvas","canvasSource","context2D","drawImage","GlRenderTargetSystem","RenderTargetSystem","super","adaptor","_GlStateSystem","_invertFrontFace","stateId","polygonOffset","_blendEq","map","setBlend","setOffset","setCullFace","setDepthTest","setFrontFace","setDepthMask","checks","defaultState","_cullFace","_frontFace","_frontFaceDirty","blendModesMap","blendMap","normal","ONE","ONE_MINUS_SRC_ALPHA","multiply","DST_COLOR","screen","ONE_MINUS_SRC_COLOR","none","SRC_ALPHA","erase","ext","min","MIN_EXT","MAX_EXT","MIN","MAX","mapWebGLBlendModesToPixi","diff","call","forceState","_updateCheck","_checkBlendMode","BLEND","_checkPolygonOffset","POLYGON_OFFSET_FILL","DEPTH_TEST","depthMask","CULL_FACE","faceMode","_glFrontFace","frontFace","setBlendMode","blendFunc","blendFuncSeparate","blendEquationSeparate","FUNC_ADD","setPolygonOffset","scale","CCW","pixelStorei","UNPACK_FLIP_Y_WEBGL","func","indexOf","splice","system","GlStateSystem","GlTexture","RGBA","samplerType","glUploadBufferImageResource","upload","texSubImage2D","texImage2D","compressedFormatMap","glUploadCompressedTextureResource","UNPACK_ALIGNMENT","mipWidth","mipHeight","compressed","levelBuffer","compressedTexImage2D","glUploadImageResource","glWidth","glHeight","textureWidth","textureHeight","resourceWidth","resourceHeight","glUploadVideoResource","isValid","scaleModeToGlFilter","linear","nearest","mipmapScaleModeToGlFilter","wrapModeToGlAddress","repeat","compareModeToGlCompare","applyStyleParams","mipmaps","anisotropicExt","glFunctionName","firstParam","forceClamp","firstCreation","castParam","addressModeU","addressModeV","addressModeW","wrapModeS","wrapModeT","wrapModeR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","magFilter","TEXTURE_MAG_FILTER","mipmapFilter","glFilterMode","minFilter","TEXTURE_MIN_FILTER","maxAnisotropy","level","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_COMPARE_FUNC","GlTextureSystem","managedTextures","_glTextures","_glSamplers","_boundTextures","_activeTextureLocation","_boundSamplers","_uploads","image","video","_premultiplyAlpha","_useSeparateSamplers","_mapFormatToInternalFormat","bgra8unorm","SRGB8_ALPHA8_EXT","SRGB8_ALPHA8","RGBA8","r8unorm","R8","r8snorm","R8_SNORM","r8uint","R8UI","r8sint","R8I","r16uint","R16UI","r16sint","R16I","r16float","R16F","rg8unorm","RG8","rg8snorm","RG8_SNORM","rg8uint","RG8UI","rg8sint","RG8I","r32uint","R32UI","r32sint","R32I","r32float","R32F","rg16uint","RG16UI","rg16sint","RG16I","rg16float","RG16F","rgba8unorm","rgba8snorm","RGBA8_SNORM","rgba8uint","RGBA8UI","rgba8sint","RGBA8I","rgb9e5ufloat","RGB9_E5","rgb10a2unorm","RGB10_A2","rg11b10ufloat","R11F_G11F_B10F","rg32uint","RG32UI","rg32sint","RG32I","rg32float","RG32F","rgba16uint","RGBA16UI","rgba16sint","RGBA16I","rgba16float","RGBA16F","rgba32uint","RGBA32UI","rgba32sint","RGBA32I","rgba32float","RGBA32F","stencil8","STENCIL_INDEX8","depth16unorm","DEPTH_COMPONENT16","depth24plus","DEPTH_COMPONENT24","depth32float","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","mapFormatToGlInternalFormat","_mapFormatToType","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","mapFormatToGlType","_mapFormatToFormat","RED","RG","RGB","DEPTH_COMPONENT","mapFormatToGlFormat","initSource","_bindSampler","_touched","textureGC","_activateLocation","bindTexture","bindSampler","sampler","_getGlSampler","boundTextures","activeTexture","TEXTURE0","_initSource","createTexture","autoGenerateMipmaps","isPowerOfTwo","biggestDimension","mipLevelCount","floor","log2","includes","onSourceUpdate","onStyleChange","onSourceDestroy","onSourceUnload","onUpdateMipmaps","updateStyle","deleteTexture","alphaMode","UNPACK_PREMULTIPLY_ALPHA_WEBGL","uploadMethodId","generateMipmap","off","_initSampler","glSampler","createSampler","_resourceId","generateCanvas","pixels","getPixels","ctx","imageData","createImageData","putImageData","frame","round","Uint8Array","glRenterTarget","readPixels","Uint8ClampedArray","slice","fill","DefaultWebGLSystems","SharedSystems","GlUboSystem","GlUniformGroupSystem","GlShaderSystem","DefaultWebGLPipes","DefaultWebGLAdapters","systems","renderPipes","renderPipeAdaptors","handleByNamedList","WebGLPipes","WebGLRenderer","AbstractRenderer","WEBGL"],"sourceRoot":""}